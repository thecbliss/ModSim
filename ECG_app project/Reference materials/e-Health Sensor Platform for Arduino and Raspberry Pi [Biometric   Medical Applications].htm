<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0133)http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_1 -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric / Medical Applications]</title>
<meta name="description" content="The e-Health Sensor Shield allows Arduino and Raspberry Pi users to perform biometric and medical applications by using 9 different sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing), Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and Patient Position (Accelerometer).">
<meta name="keywords" content="e-health, ehealth, biometric, medical, sensor, sensors, pulse, oxygen in blood, spo2, electrocardiogram, ecg, pulse, temperature, body, medical, glucometer, temperature, patient, galvanic skin response, gsr, sweating, blood pressure, sphygmomanometer, position, accelerometer ">
<meta name="robots" content="INDEX,FOLLOW">
<link rel="icon" href="http://www.cooking-hacks.com/skin/frontend/default/cooking/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://www.cooking-hacks.com/skin/frontend/default/cooking/favicon.ico" type="image/x-icon">
<link rel="alternate" href="http://www.cooking-hacks.com/news.rss" title="Cooking Hacks News" type="application/rss+xml">
<!--[if lt IE 7]>
<script type="text/javascript">
//<![CDATA[
    var BLANK_URL = 'http://www.cooking-hacks.com/js/blank.html';
    var BLANK_IMG = 'http://www.cooking-hacks.com/js/spacer.gif';
//]]>
</script>
<![endif]-->
<link rel="stylesheet" type="text/css" href="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/f2ea247ac2604b0606c29b9e4ee9abd8.css" media="all">
<link rel="stylesheet" type="text/css" href="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/a3d5970294290ee8f6b4970f4797c60b.css" media="print">
<script type="text/javascript" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/cde20ecbfacf69ec5e8cbc3174a4b67d.js"></script>
<!--[if lte IE 7]>
<link rel="stylesheet" type="text/css" href="http://www.cooking-hacks.com/media/css/f806a89abc9e78d54f625f51e4dcd2a0.css" media="all" />
<![endif]-->
<!--[if gte IE 8]>
<link rel="stylesheet" type="text/css" href="http://www.cooking-hacks.com/media/css/b94b29fc43ca5adbb9335706f974f4c6.css" media="all" />
<![endif]-->
<!--[if lt IE 7]>
<script type="text/javascript" src="http://www.cooking-hacks.com/media/js/de6b913831dfd9a3c44d892edbc05833.js"></script>
<![endif]-->

<script type="text/javascript">
//<![CDATA[
Mage.Cookies.path     = '/';
Mage.Cookies.domain   = '.www.cooking-hacks.com';
//]]>
</script>

<script type="text/javascript">
//<![CDATA[
optionalZipCountries = [];
//]]>
</script>
<link rel="alternate" type="application/rss+xml" title="Cooking Hacks Blog - RSS Feed" href="http://www.cooking-hacks.com/index.php/blog/feed">
<script type="text/javascript">var Translator = new Translate({"Please use only letters (a-z or A-Z), numbers (0-9) or underscore(_) in this field, first character should be a letter.":"Please use only letters (a-z or A-Z), numbers (0-9) or underscores (_) in this field, first character must be a letter."});</script><script type="text/javascript" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/jquery.min.js" <="" script="">
<script>window.jQuery || document.write(unescape('%3Cscript src="/js/jquery/jquery-1.7.js"%3E%3C/script%3E'))</script>
<script type="text/javascript">var $j = jQuery.noConflict();</script>
<script src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/cycle.js" type="text/javascript"></script>
<script src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/auxiliar.js" type="text/javascript"></script><script type="text/javascript" async="" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/ga.js"></script></head>
<body class=" cms-page-view cms-documentation-tutorials-ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical">

<!-- BEGIN GOOGLE ANALYTICS CODE -->
<script type="text/javascript">
//<![CDATA[
    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
    })();

    var _gaq = _gaq || [];

_gaq.push(['_setAccount', 'UA-19708093-1']);
_gaq.push(['_trackPageview']);


//]]>
</script>
<!-- END GOOGLE ANALYTICS CODE --><div class="wrapper">
        <noscript>
        &lt;div class="noscript"&gt;
            &lt;div class="noscript-inner"&gt;
                &lt;p&gt;&lt;strong&gt;JavaScript seem to be disabled in your browser.&lt;/strong&gt;&lt;/p&gt;
                &lt;p&gt;You must have JavaScript enabled in your browser to utilize the functionality of this website.&lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    </noscript>
    <div class="page">
        <div class="header-container">
    <div class="header">
	<div class="logo_libelium"><a href="http://www.libelium.com/" title="http://www.libelium.com" class="logo_libelium"><img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/logo_libelium.png" alt="libelium"></a></div>

                <a href="http://www.cooking-hacks.com/index.php/" title="Cooking Hacks by Libelium" class="logo"><strong>Cooking Hacks by Libelium</strong><img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/logo.png" alt="Cooking Hacks by Libelium"></a>

        
        
        <div class="quick-access">


            <ul class="links">
                        <li class="first"><a href="http://www.cooking-hacks.com/index.php/customer/account/" title="My Account">My Account</a></li>
                                <li><a href="http://www.cooking-hacks.com/index.php/wishlist/" title="Wishlist">Wishlist</a></li>
                                <li><a href="http://www.cooking-hacks.com/index.php/checkout/cart/" title="Cart (2 items)" class="top-link-cart">Cart (2 items)</a></li>
                                <li><a href="http://www.cooking-hacks.com/index.php/checkout/" title="Checkout" class="top-link-checkout">Checkout</a></li>
                                <li class=" last"><a href="http://www.cooking-hacks.com/index.php/customer/account/login/" title="Log In">Log In</a></li>
            </ul>
            <form id="search_mini_form" action="http://www.cooking-hacks.com/index.php/catalogsearch/result/" method="get">
    <div class="form-search">
        <label for="search">Search:</label>
        <input id="search" type="text" name="q" value="" class="input-text" autocomplete="off">
        <button type="submit" title="Search" class="button"><span><span>Search</span></span></button>
        <div id="search_autocomplete" class="search-autocomplete" style="display: none;"></div>
        <script type="text/javascript">
        //<![CDATA[
            var searchForm = new Varien.searchForm('search_mini_form', 'search', 'Search entire store here...');
            searchForm.initAutocomplete('http://www.cooking-hacks.com/index.php/catalogsearch/ajax/suggest/', 'search_autocomplete');
        //]]>
        </script>
    </div>
</form>
			
			<div id="iconos_redes_sociales">
                            <div class="button_fb_container">
        <div class="outerframe" style="width:57px;height:25px;overflow:hidden;position:relative;">
        <iframe id="innerframe" style="position:absolute;top:-31px;left:-56px;border:none; overflow:hidden; width:292px; height:62px;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/likebox.htm" scrolling="no" frameborder="0" allowtransparency="true"></iframe>
        </div>
    </div>
			<ul>	
			<li class="icon_follow_us"><a href="http://www.cooking-hacks.com/news.rss"><img alt="rss" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/rss_icon.png"></a></li>
		    <li class="icon_follow_us"><a href="http://www.flickr.com/photos/cooking-hacks"><img alt="flickr" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/flickr_icon.png"></a></li>
		    <li class="icon_follow_us"><a href="http://twitter.com/Cooking_Hacks"><img alt="twitter" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/twitter_icon.png"></a></li>
		    <li class="icon_follow_us"><a href="http://www.facebook.com/pages/Cooking-Hacks/161797590502410"><img alt="facebook" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/facebook_icon.png"></a></li>
		    <li class="icon_follow_us"><a href="http://www.youtube.com/cookinghacks"><img alt="youtube" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/youtube_icon.png"></a></li>
			</ul>
			</div>

        </div>
        		
		
	<div class="selector_bandera">
<div class="language-switcher">
    <ul>
	<label for="select-language"></label>
                <li>
                             <span class="en selected">
                <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/flag_selected_en.png" alt="English"></span>
                           
        </li>
                <li>
                            <a class="es" href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical?___store=es&___from_store=en">
                <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/flag_es.png" alt="Español"></a>
                           
        </li>
            </ul>
</div>



</div>
	<div class="welcome-msg"></div>

    </div>

</div>
<div class="nav-container">
    <ul id="nav">
        <li class="level0 nav-1 level-top first parent">
<a href="http://www.cooking-hacks.com/index.php/shop.html" class="level-top">
<span>Shop</span>
</a>
<ul class="level0">
<li class="level1 nav-1-1 first parent">
<a href="http://www.cooking-hacks.com/index.php/shop/arduino.html">
<span>Arduino</span>
</a>
<ul class="level1">
<li class="level2 nav-1-1-1 first">
<a href="http://www.cooking-hacks.com/index.php/shop/arduino/starter-kits.html">
<span>Starter Kits</span>
</a>
</li><li class="level2 nav-1-1-2">
<a href="http://www.cooking-hacks.com/index.php/shop/arduino/shields.html">
<span>Shields</span>
</a>
</li><li class="level2 nav-1-1-3">
<a href="http://www.cooking-hacks.com/index.php/shop/arduino/wireless.html">
<span>Wireless</span>
</a>
</li><li class="level2 nav-1-1-4">
<a href="http://www.cooking-hacks.com/index.php/shop/arduino/packs.html">
<span>Packs</span>
</a>
</li><li class="level2 nav-1-1-5">
<a href="http://www.cooking-hacks.com/index.php/shop/arduino/enclosures.html">
<span>Enclosures</span>
</a>
</li><li class="level2 nav-1-1-6">
<a href="http://www.cooking-hacks.com/index.php/shop/arduino/prototyping.html">
<span>Prototyping</span>
</a>
</li><li class="level2 nav-1-1-7">
<a href="http://www.cooking-hacks.com/index.php/shop/arduino/converters.html">
<span>Converters</span>
</a>
</li><li class="level2 nav-1-1-8">
<a href="http://www.cooking-hacks.com/index.php/shop/arduino/books.html">
<span>Books</span>
</a>
</li><li class="level2 nav-1-1-9 last">
<a href="http://www.cooking-hacks.com/index.php/shop/arduino/exclusive-products.html">
<span>Exclusive Products</span>
</a>
</li>
</ul>
</li><li class="level1 nav-1-2">
<a href="http://www.cooking-hacks.com/index.php/shop/waspmote.html">
<span>Waspmote</span>
</a>
</li><li class="level1 nav-1-3 parent">
<a href="http://www.cooking-hacks.com/index.php/shop/raspberry-pi.html">
<span>Raspberry Pi</span>
</a>
<ul class="level1">
<li class="level2 nav-1-3-10 first">
<a href="http://www.cooking-hacks.com/index.php/shop/raspberry-pi/starter-kit.html">
<span>Starter Kits</span>
</a>
</li><li class="level2 nav-1-3-11 last">
<a href="http://www.cooking-hacks.com/index.php/shop/raspberry-pi/shields.html">
<span>Shields</span>
</a>
</li>
</ul>
</li><li class="level1 nav-1-4 parent">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors.html">
<span>Sensors</span>
</a>
<ul class="level1">
<li class="level2 nav-1-4-12 first">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/e-health.html">
<span>e-Health</span>
</a>
</li><li class="level2 nav-1-4-13">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/motion.html">
<span>Motion</span>
</a>
</li><li class="level2 nav-1-4-14">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/gas.html">
<span>Gas</span>
</a>
</li><li class="level2 nav-1-4-15">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/infrared.html">
<span>Infrared</span>
</a>
</li><li class="level2 nav-1-4-16">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/proximity.html">
<span>Proximity</span>
</a>
</li><li class="level2 nav-1-4-17 parent">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/temperature.html">
<span>Temp. &amp; Humi.</span>
</a>
<ul class="level2">
<li class="level3 nav-1-4-17-1 first last">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/temperature/humidity.html">
<span>Humidity</span>
</a>
</li>
</ul>
</li><li class="level2 nav-1-4-18">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/light.html">
<span>Light</span>
</a>
</li><li class="level2 nav-1-4-19">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/current.html">
<span>Current</span>
</a>
</li><li class="level2 nav-1-4-20">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/flow.html">
<span>Flow</span>
</a>
</li><li class="level2 nav-1-4-21">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/sound.html">
<span>Sound</span>
</a>
</li><li class="level2 nav-1-4-22 last">
<a href="http://www.cooking-hacks.com/index.php/shop/sensors/load-cell.html">
<span>Load</span>
</a>
</li>
</ul>
</li><li class="level1 nav-1-5 parent">
<a href="http://www.cooking-hacks.com/index.php/shop/actuators.html">
<span>Actuators</span>
</a>
<ul class="level1">
<li class="level2 nav-1-5-23 first parent">
<a href="http://www.cooking-hacks.com/index.php/shop/actuators/buttons.html">
<span>Buttons</span>
</a>
<ul class="level2">
<li class="level3 nav-1-5-23-2 first last">
<a href="http://www.cooking-hacks.com/index.php/shop/actuators/buttons/buttons.html">
<span>Buttons</span>
</a>
</li>
</ul>
</li><li class="level2 nav-1-5-24">
<a href="http://www.cooking-hacks.com/index.php/shop/actuators/relays.html">
<span>Relays</span>
</a>
</li><li class="level2 nav-1-5-25">
<a href="http://www.cooking-hacks.com/index.php/shop/actuators/laser.html">
<span>Laser</span>
</a>
</li><li class="level2 nav-1-5-26">
<a href="http://www.cooking-hacks.com/index.php/shop/actuators/solenoids-1.html">
<span>Solenoids</span>
</a>
</li><li class="level2 nav-1-5-27 last">
<a href="http://www.cooking-hacks.com/index.php/shop/actuators/misc.html">
<span>Miscellaneous</span>
</a>
</li>
</ul>
</li><li class="level1 nav-1-6 parent">
<a href="http://www.cooking-hacks.com/index.php/shop/wireless.html">
<span>Wireless</span>
</a>
<ul class="level1">
<li class="level2 nav-1-6-28 first">
<a href="http://www.cooking-hacks.com/index.php/shop/wireless/bluetooth.html">
<span>Bluetooth</span>
</a>
</li><li class="level2 nav-1-6-29">
<a href="http://www.cooking-hacks.com/index.php/shop/wireless/rfid.html">
<span>RFID</span>
</a>
</li><li class="level2 nav-1-6-30">
<a href="http://www.cooking-hacks.com/index.php/shop/wireless/802-15-4-zigbee.html">
<span>802.15.4 / ZigBee</span>
</a>
</li><li class="level2 nav-1-6-31">
<a href="http://www.cooking-hacks.com/index.php/shop/wireless/gsm-gprs.html">
<span>GSM / GPRS</span>
</a>
</li><li class="level2 nav-1-6-32">
<a href="http://www.cooking-hacks.com/index.php/shop/wireless/gps.html">
<span>GPS</span>
</a>
</li><li class="level2 nav-1-6-33">
<a href="http://www.cooking-hacks.com/index.php/shop/wireless/wifi.html">
<span>WiFi</span>
</a>
</li><li class="level2 nav-1-6-34">
<a href="http://www.cooking-hacks.com/index.php/shop/wireless/rf.html">
<span>RF</span>
</a>
</li><li class="level2 nav-1-6-35 last">
<a href="http://www.cooking-hacks.com/index.php/shop/wireless/antennas.html">
<span>Antennas</span>
</a>
</li>
</ul>
</li><li class="level1 nav-1-7 parent">
<a href="http://www.cooking-hacks.com/index.php/shop/shields.html">
<span>DevTools</span>
</a>
<ul class="level1">
<li class="level2 nav-1-7-36 first">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/arm.html">
<span>ARM</span>
</a>
</li><li class="level2 nav-1-7-37">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/arduino.html">
<span>Arduino</span>
</a>
</li><li class="level2 nav-1-7-38">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/avr.html">
<span>AVR</span>
</a>
</li><li class="level2 nav-1-7-39">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/net.html">
<span>.NET</span>
</a>
</li><li class="level2 nav-1-7-40">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/breakout-boards.html">
<span>Breakout boards</span>
</a>
</li><li class="level2 nav-1-7-41">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/pic.html">
<span>PIC</span>
</a>
</li><li class="level2 nav-1-7-42">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/e-health.html">
<span>e-Health</span>
</a>
</li><li class="level2 nav-1-7-43">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/e-textile.html">
<span>E-Textile</span>
</a>
</li><li class="level2 nav-1-7-44">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/ipod-ipad-iphone.html">
<span>iPad/iPhone</span>
</a>
</li><li class="level2 nav-1-7-45 parent">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/components-1.html">
<span>Components</span>
</a>
<ul class="level2">
<li class="level3 nav-1-7-45-3 first">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/components-1/components.html">
<span>Components</span>
</a>
</li><li class="level3 nav-1-7-45-4">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/components-1/microcontrollers.html">
<span>Microcontrollers</span>
</a>
</li><li class="level3 nav-1-7-45-5">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/components-1/resistors.html">
<span>Resistors</span>
</a>
</li><li class="level3 nav-1-7-45-6">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/components-1/capacitors.html">
<span>Capacitors</span>
</a>
</li><li class="level3 nav-1-7-45-7">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/components-1/breadboards.html">
<span>Breadboards</span>
</a>
</li><li class="level3 nav-1-7-45-8">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/components-1/sockets.html">
<span>Sockets</span>
</a>
</li><li class="level3 nav-1-7-45-9 last">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/components-1/misc.html">
<span>Miscellaneous</span>
</a>
</li>
</ul>
</li><li class="level2 nav-1-7-46 last">
<a href="http://www.cooking-hacks.com/index.php/shop/shields/connectors.html">
<span>Connectors</span>
</a>
</li>
</ul>
</li><li class="level1 nav-1-8 parent">
<a href="http://www.cooking-hacks.com/index.php/shop/robotics.html">
<span>Robotics</span>
</a>
<ul class="level1">
<li class="level2 nav-1-8-47 first">
<a href="http://www.cooking-hacks.com/index.php/shop/robotics/drivers.html">
<span>Drivers</span>
</a>
</li><li class="level2 nav-1-8-48">
<a href="http://www.cooking-hacks.com/index.php/shop/robotics/motors.html">
<span>Motors</span>
</a>
</li><li class="level2 nav-1-8-49">
<a href="http://www.cooking-hacks.com/index.php/shop/robotics/mechanical.html">
<span>Mechanical</span>
</a>
</li><li class="level2 nav-1-8-50 last">
<a href="http://www.cooking-hacks.com/index.php/shop/robotics/servos.html">
<span>Servos</span>
</a>
</li>
</ul>
</li><li class="level1 nav-1-9 parent">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories.html">
<span>Accessories</span>
</a>
<ul class="level1">
<li class="level2 nav-1-9-51 first">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/cables.html">
<span>Cables</span>
</a>
</li><li class="level2 nav-1-9-52">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/antennas.html">
<span>Antennas</span>
</a>
</li><li class="level2 nav-1-9-53">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/displays.html">
<span>Displays</span>
</a>
</li><li class="level2 nav-1-9-54">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/led.html">
<span>LED</span>
</a>
</li><li class="level2 nav-1-9-55">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/rfid-tags.html">
<span>RFID TAGs</span>
</a>
</li><li class="level2 nav-1-9-56">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/programmers.html">
<span>Programmers</span>
</a>
</li><li class="level2 nav-1-9-57">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/converters.html">
<span>Converters</span>
</a>
</li><li class="level2 nav-1-9-58">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/misc.html">
<span>Miscellaneous</span>
</a>
</li><li class="level2 nav-1-9-59 last parent">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/power.html">
<span>Power</span>
</a>
<ul class="level2">
<li class="level3 nav-1-9-59-10 first">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/power/batteries.html">
<span>Batteries</span>
</a>
</li><li class="level3 nav-1-9-59-11">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/power/solar-panels.html">
<span>Solar Panels</span>
</a>
</li><li class="level3 nav-1-9-59-12 last">
<a href="http://www.cooking-hacks.com/index.php/shop/accessories/power/power-supply.html">
<span>Power Supply</span>
</a>
</li>
</ul>
</li>
</ul>
</li><li class="level1 nav-1-10 parent">
<a href="http://www.cooking-hacks.com/index.php/shop/lab-tools.html">
<span>Tools</span>
</a>
<ul class="level1">
<li class="level2 nav-1-10-60 first">
<a href="http://www.cooking-hacks.com/index.php/shop/lab-tools/soldering.html">
<span>Soldering</span>
</a>
</li><li class="level2 nav-1-10-61">
<a href="http://www.cooking-hacks.com/index.php/shop/lab-tools/hand-tools.html">
<span>Hand Tools</span>
</a>
</li><li class="level2 nav-1-10-62 last">
<a href="http://www.cooking-hacks.com/index.php/shop/lab-tools/prototyping.html">
<span>Prototyping</span>
</a>
</li>
</ul>
</li><li class="level1 nav-1-11 last">
<a href="http://www.cooking-hacks.com/index.php/shop/on-demand-products.html">
<span>On Demand</span>
</a>
</li>
</ul>
</li><li class="level0 nav-2 level-top parent">
<a href="http://www.cooking-hacks.com/index.php/documentation.html" class="level-top">
<span>Tutorials</span>
</a>
<ul class="level0">
<li class="level1 nav-2-1 first">
<a href="http://www.cooking-hacks.com/index.php/documentation/tutorials.html">
<span>Arduino Guides</span>
</a>
</li><li class="level1 nav-2-2">
<a href="http://www.cooking-hacks.com/index.php/documentation/raspberry-tutorials.html">
<span>Raspberry Pi Guides</span>
</a>
</li><li class="level1 nav-2-3 last">
<a href="http://www.cooking-hacks.com/index.php/documentation/video-tutorials.html">
<span>Videos</span>
</a>
</li>
</ul>
</li><li class="level0 nav-3 level-top parent">
<a href="http://www.cooking-hacks.com/index.php/let-s-cook.html" class="level-top">
<span>Let's Cook!</span>
</a>
<ul class="level0">
<li class="level1 nav-3-1 first">
<a href="http://www.cooking-hacks.com/index.php/let-s-cook/community-hacks.html">
<span>Community Hacks</span>
</a>
</li><li class="level1 nav-3-2 last">
<a href="http://www.cooking-hacks.com/index.php/let-s-cook/send-us-your-recipe.html">
<span>Send us your recipe</span>
</a>
</li>
</ul>
</li><li class="level0 nav-4 level-top">
<a href="http://www.cooking-hacks.com/index.php/forum.html" class="level-top">
<span>Forum</span>
</a>
</li><li class="level0 nav-5 level-top">
<a href="http://www.cooking-hacks.com/index.php/customer-service.html" class="level-top">
<span>Customer Service</span>
</a>
</li><li class="level0 nav-6 level-top">
<a href="http://www.cooking-hacks.com/index.php/distributors.html" class="level-top">
<span>Distributors</span>
</a>
</li><li class="level0 nav-7 level-top">
<a href="http://www.cooking-hacks.com/index.php/manifesto.html" class="level-top">
<span>Manifesto</span>
</a>
</li><li class="level0 nav-8 level-top last">
<a href="http://www.cooking-hacks.com/index.php/blog-cooking-hacks.html" class="level-top">
<span>Blog</span>
</a>
</li>    </ul>
</div>
<p>
  </p><div id="shop_horizontal_container">
    <div class="shop_horizontal">
      <ul>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/arduino.html">Arduino</a>
        </li>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/waspmote.html">Waspmote</a>
        </li>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/raspberry-pi.html">Raspberry Pi</a>
        </li>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/sensors.html">Sensors</a>
        </li>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/actuators.html">Actuators</a>
        </li>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/wireless.html">Wireless</a>
        </li>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/shields.html">DevTools</a>
        </li>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/robotics.html">Robotics</a>
        </li>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/accessories.html">Accessories</a>
        </li>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/lab-tools.html">Tools</a>
        </li>
        <li>
        <a href="http://www.cooking-hacks.com/index.php/shop/on-demand-products.html">On Demand</a>
        </li>
      </ul>
    </div>
  </div>
  <div id="shop_horizontal_container_3er_nivel">
    <div class="shop_horizontal">
      <ul>
        <li>
          <a href="http://www.cooking-hacks.com/index.php/shop/arduino/starter-kits.html">Starter Kits</a>
        </li>
        <li>
          <a href="http://www.cooking-hacks.com/index.php/shop/arduino/shields.html">Shields</a>
        </li>
        <li>
          <a href="http://www.cooking-hacks.com/index.php/shop/arduino/wireless.html">Wireless</a>
        </li>
        <li>
          <a href="http://www.cooking-hacks.com/index.php/shop/arduino/packs.html">Packs</a>
        </li>
        <li>
          <a href="http://www.cooking-hacks.com/index.php/shop/arduino/enclosures.html">Enclosures</a>
        </li>
        <li>
          <a href="http://www.cooking-hacks.com/index.php/shop/arduino/prototyping.html">Prototyping</a>
        </li>
        <li>
          <a href="http://www.cooking-hacks.com/index.php/shop/arduino/converters.html">Converters</a>
        </li>
        <li>
          <a href="http://www.cooking-hacks.com/index.php/shop/arduino/books.html">Books</a>
        </li>
        <li>
          <a href="http://www.cooking-hacks.com/index.php/shop/arduino/exclusive-products.html">Exclusive Products</a>
        </li>
      </ul>
    </div>
  </div><p></p>        <div class="main-container col2-right-layout">
            <div class="main">
                <div class="breadcrumbs">
    <ul>
                    <li class="home">
                            <a href="http://www.cooking-hacks.com/index.php/" title="Go to Home Page">Home</a>
                                        <span>/ </span>
                        </li>
                    <li class="cms_page">
                            <strong>e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric / Medical Applications]</strong>
                                    </li>
            </ul>
</div>
                <div class="col-main">
                                        <div class="std"><!-- TITTLE -->
<script src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/jquery.waypoint.min.js" type="text/javascript"></script>
<script src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/jquery.lightbox-0.5.min.js" type="text/javascript"></script>
<script type="text/javascript">// <![CDATA[
$j(function() {
	$j(".main img").waypoint(function(e, dir) {
		src = $j(this).attr("data-src");
		$j(this).attr("src", src);
	}, {
   	offset: '100'});
   	$j('a#single_image').lightBox({
   		fixedNavigation:true,
   		imageBlank: 'http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/lightbox-blank.gif',
   		imageLoading: 'http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/lightbox-ico-loading.gif',
		imageBtnClose: 'http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/lightbox-btn-close.gif',
		imageBtnPrev: 'http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/lightbox-btn-prev.gif',
		imageBtnNext: 'http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/lightbox-btn-next.gif'
   	});
   	$j('a.top_link').click(function() {
		$j('html,body').animate({scrollTop: $j("#index_anchor").offset().top},'slow');
	});
   
});
// ]]></script>
<style><!--
	.top_link{text-decoration:none;color:#87888a;}
	.top_link:hover{text-decoration: underline;}
	.texto_cms img {border:none;}
	.ancla {text-decoration:none !important; color:black !important;font-size:15px !important;}
	/*Lightbox*/
	#jquery-overlay{position:absolute;top:0;left:0;z-index:90;width:100%;height:500px}#jquery-lightbox{position:absolute;top:0;left:0;width:100%;z-index:100;text-align:center;line-height:0}#jquery-lightbox a img{border:0}#lightbox-container-image-box{position:relative;background-color:#fff;width:250px;height:250px;margin:0 auto}#lightbox-container-image{padding:10px}#lightbox-loading{position:absolute;top:40%;left:0;height:25%;width:100%;text-align:center;line-height:0}#lightbox-nav{position:absolute;top:0;left:0;height:100%;width:100%;z-index:10}#lightbox-container-image-box>#lightbox-nav{left:0}#lightbox-nav a{outline:0}#lightbox-nav-btnPrev,#lightbox-nav-btnNext{width:49%;height:100%;zoom:1;display:block}#lightbox-nav-btnPrev{left:0;float:left}#lightbox-nav-btnNext{right:0;float:right}#lightbox-container-image-data-box{font:10px Verdana,Helvetica,sans-serif;background-color:#fff;margin:0 auto;line-height:1.4em;overflow:auto;width:100%;padding:0 10px 0}#lightbox-container-image-data{padding:0 10px;color:#666}#lightbox-container-image-data #lightbox-image-details{width:70%;float:left;text-align:left}#lightbox-image-details-caption{font-weight:bold}#lightbox-image-details-currentNumber{display:block;clear:left;padding-bottom:1.0em}#lightbox-secNav-btnClose{width:66px;float:right;padding-bottom:.7em}
--></style>
<div class="titulo_cms">
<h1>e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric / Medical Applications]</h1>
</div>
<div class="texto_cms"><!-- INTRODUCTION -->
<div style="float: right; margin-left: 15px; margin-top: 5px; margin-bottom: 10px;"><img border="0" alt="e_health_planta" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e_health_planta.png" style="width: auto !important; border: none; margin: 0; background: none;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e_health_planta.png"></div>
<p>The e-Health Sensor Shield allows Arduino and Raspberry Pi users to perform biometric and medical applications where body monitoring is needed by using 9 different sensors: pulse, oxygen in blood (SPO2), airflow (breathing), body temperature, electrocardiogram (ECG), glucometer, galvanic skin response (GSR - sweating), blood pressure (sphygmomanometer) and patient position (accelerometer).</p>
<p>This information can be used to monitor in real time the state of a patient or to get sensitive data in order to be subsequently analysed for medical diagnosis. Biometric information gathered can be wirelessly sent using any of the 6 connectivity options available: Wi-Fi, 3G, GPRS, Bluetooth, 802.15.4 and ZigBee depending on the application.</p>
<p>If real time image diagnosis is needed a camera can be attached to the 3G module in order to send photos and videos of the patient to a medical diagnosis center.</p>
<p>Data can be sent to the Cloud in order to perform permanent storage or visualized in real time by sending the data directly to a laptop or Smartphone. iPhone and Android applications have been designed in order to easily see the patient's information.</p>
<p><a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/todos_elementos_1000.png" id="single_image"> <img border="0" alt="e-Health_all_elements" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/todos_elementos.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/todos_elementos.png"><br> </a></p>
<p><span style="text-decoration: underline;">Quick FAQ:</span></p>
<ul>
<li><span style="font-style: italic;">What does it mean to count with an open medical monitoring platform?</span>
<p>Cooking Hacks wants to give Community the necessary tools in order to develop new e-Health applications and products. We want Arduino and Raspberry Pi Community to use this platform as a quick proof of concept and the basis of a new era of open source medical products.</p>
</li>
<li><span style="font-style: italic;"> How do I ensure the privacy of the biometric data sent?</span>
<p>Privacy is one of the key points in this kind of applications. For this reason the platform includes several security levels:</p>
<ul>
<li> In the communication link layer: AES 128 for 802.14.5 / ZigBee and WPA2 for Wifi.</li>
<li>In the application layer: by using the HTTPS (secure) protocol we ensure a point to point security tunnel between each sensor node and the web server (this is the same method as used in the bank transfers).</li>
</ul>
<p>&nbsp;</p>
</li>
</ul>
<p><a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/luis_conectado_1000.png" id="single_image"> <img border="0" alt="Luis_connected" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/luis_conectado.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/luis_conectado.png"><br> </a></p>
<p style="font-style: italic;">e-Health Sensor Shield over Arduino (left) Raspberry Pi (right)</p>
<img border="0" alt="e-Health_all_elements" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arduino_raspberry.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/arduino_raspberry.png"><br>
<div class="notas_fondo" style="margin-top: 20px; background-color: #ffcaca;">
<p><span class="content" style="text-decoration: underline;">IMPORTANT:</span> The e-Health Sensor Platform has been designed by Cooking Hacks (the open hardware division of Libelium) in order to help researchers, developers and artists to measure biometric sensor data for experimentation, fun and test purposes. Cooking Hacks provides a cheap and open alternative compared with the proprietary and price prohibitive medical market solutions. However, as the platform does not have medical certifications it can not be used to monitor critical patients who need accurate medical monitoring or those whose conditions must be accurately measured for an ulterior professional diagnosis.</p>
</div>
<div class="notas_fondo" style="margin-top: 20px;">
<p><span class="content" style="text-decoration: underline;">NOTE:</span> If you are searching for <a href="http://www.sensor-networks.org/">Wireless Sensor Networks </a>devices (motes) you may be interested in our ready to market sensor platform: <a href="http://www.libelium.com/waspmote">Waspmote</a>.</p>
</div>
<div class="texto_cms">
<h2>Get the shields and sensors</h2>
<h4><a class="ancla">Kit</a></h4>
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-shield-biometric-medical-arduino-raspberry-pi.html">e-Health Sensors Shield</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-complete-kit-biometric-medical-arduino-raspberry-pi.html">e-Health Sensor Platform Complete Kit</a></li>
</ul>
<h4><a class="ancla">Sensors</a></h4>
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/patient-position-sensor-accelerometer-ehealth-medical.html"> Patient Position Sensor (Accelerometer)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/glucometer-sensor-ehealth-medical.html"> Glucometer Sensor</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/body-temperature-sensor-ehealth-medical.html"> Body Temperature Sensor</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/blood-pressure-sensor-sphygmomanometer-ehealth-medical.html">Blood Pressure Sensor (Sphygmomanometer)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/pulse-and-oxygen-in-blood-sensor-spo2-ehealth-medical.html">Pulse and Oxygen in Blood Sensor (SPO2)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/airflow-sensor-breathing-ehealth-medical.html">Airflow Sensor (Breathing)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/galvanic-skin-response-sensor-gsr-sweating-ehealth-medical.html">Galvanic Skin Response Sensor (GSR - Sweating)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/electrocardiogram-sensor-ecg-ehealth-medical.html">Electrocardiogram Sensor (ECG)</a></li>
</ul>
<!-- CONTENTS --> <!-- STEPS INDEX -->
<h2><a name="index" id="index_anchor" class="ancla">Article Index</a></h2>
<ul style="margin-top: 10px;">
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step1">1. Features</a> 
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step1_1">Electrical features</a></li>
</ul>
</li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step2">2. The shield</a> 
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step2_2">e-Health PCB</a></li>
</ul>
</li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step3">3. The library</a> 
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step3_1">e-Health shield over Arduino</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step3_2">e-Health shield over Raspberry Pi</a></li>
</ul>
</li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step4">4. Sensor Platform</a> 
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step4_1">Pulse and Oxygen in Blood</a> </li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step4_2">Electrocardiogram (ECG)</a> </li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step4_3">Airflow: breathing</a> </li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step4_4">Body temperature</a> </li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step4_5">Blood pressure</a> </li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step4_6">Patient position and falls</a> </li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step4_7">Galvanic Skin Response (GSR)</a> </li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step4_8">Glucometer</a> </li>
</ul>
</li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5">5. Visualizing the data</a> 
<ul>
<li><a href="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications].htm">LCD</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_3">KST: Real-time data viewing and plotting</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_4">Serial console</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_5">SmartPhone Application</a></li>
</ul>
</li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step6">6. Sending the data to the Cloud</a> 
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step6_1">Wifi</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step6_2">Bluetooth</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step6_3">Zigbee / 802.15.4</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step6_4">GPRS</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step6_5">3G</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step6_6">Camera for Photo Diagnosis</a></li>
</ul>
</li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step7">7. Forum</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step8">8. Get the shields and sensors</a> 
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step8_1">Kits</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step8_2">Shield</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step8_3">Sensors</a></li>
</ul>
</li>
</ul>
<!-- STEP 1 -->
<h2><a name="step1" class="ancla">1. Features.</a></h2>
<p>The pack we are going to use in this tutorial is the eHealth Sensor platform from Cooking hacks. The <a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-shield-biometric-medical-arduino-raspberry-pi.html">e-Health Sensor Shield</a> is fully compatible with Raspberry and new and old Arduino USB versions, Duemilanove and Mega.</p>
<p>&nbsp;</p>
<ul style="margin-top: 10px;">
<li>7 non-invasive + 1 invasive  medical sensors</li>
<li>Storage and use of glucose measurements.</li>
<li>Monitoring ECG signal.</li>
<li>Airflow control of patient.</li>
<li>Body temperature data.</li>
<li>Galvanic skin response measurements.</li>
<li>Body position detection.</li>
<li>Pulse and oxygen functions.</li>
<li>Blood pressure control device.</li>
<li>Multiple data visualization systems.</li>
<li>Compatible with all UART device.</li>
</ul>
<!-- <img style="width: auto !important; height: auto !important;" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/graficas.png" alt="graficas" /><br /> -->
<h4><a name="step1_1" class="ancla">Electrical features:</a></h4>
<p>The e-Health shield can be powered by the PC or by an external power supply. Some of the USB ports on computers are not able to give all the current the module needs to work, if your module have problems when it work, you can use an external power supply (12V - 2A) on the Arduino/RasberryPi.</p>
<div style="float: right;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#index" class="top_link"><img border="0" alt="up" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arrow_up.png" style="width: auto !important; height: auto !important; border: none; vertical-align: text-bottom; margin: 0;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/arrow_up.png"><span style="margin-left: 5px; color: #87888a;">Go to index</span></a></div>
<div style="clear: both;">&nbsp;</div>
<!-- STEP 2 -->
<h2><a name="step2" class="ancla">2. The shield</a></h2>
<h4><a name="step2_1" class="ancla">e-Health PCB</a></h4>
<div style="margin: auto; text-align: center;"><img border="0" alt="e-Health front" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e-Health_top.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health_top.png"> <img border="0" alt="e-Health front" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e-Health_bottom-01.png" style="width: 325px !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health_bottom-01.png"></div>
<h4>Schematics</h4>
<p><a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/e-Health_v3.pdf">Download the e-Health Schematics</a></p>
<h4>e-Health shield over Arduino</h4>
<div style="margin: auto; text-align: center;"><img border="0" alt="arduino_e_health" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arduino_e_health.png" style="width: auto !important; height: auto !important; margin-top: 30px;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/arduino_e_health.png"></div>
<img border="0" alt="montaje3" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/montaje3.png" style="width: auto !important; height: auto !important; float: left;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/montaje3.png"> <img border="0" alt="e-Health shield over Arduino" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arduino.png" style="width: auto !important; height: auto !important; float: right; padding-top: 80px;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/arduino.png">
<div style="clear: both;">&nbsp;</div>
<p><strong>The shields:</strong></p>
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/arduino-uno.html">Get Arduino</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-shield-biometric-medical-arduino-raspberry-pi.html">Get the e-Health sensor shield</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-complete-kit-biometric-medical-arduino-raspberry-pi.html">Get the e-Health complete kit</a></li>
</ul>
<h4>e-Health shield over Raspberry Pi</h4>
<p>In order to connect the e-Health Sensor Shield to Raspberry Pi an adaptor shield is needed. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge">Click here to know more about the Raspberry Pi to Arduino Shields Connection board.</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="raspberry_e_heatlh" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/raspberry_e_heatlh.png" style="width: auto !important; height: auto !important; float: left;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/raspberry_e_heatlh.png"></div>
<img border="0" alt="raspberry_e_heatlh" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Montaje1_300px.png" style="width: auto !important; height: auto !important; float: left;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Montaje1_300px.png"> <img border="0" alt="raspberry_e_heatlh" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Montaje2_300px.png" style="width: auto !important; height: auto !important; float: right;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Montaje2_300px.png">
<div style="margin: auto; text-align: center;"><img border="0" alt="e-Health raspberry pi" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e-Health_raspberrypi.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health_raspberrypi.png"></div>
<p><strong>The shields:</strong></p>
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/shop/raspberry-pi.html">Get Raspberry Pi</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/raspberry-pi-to-arduino-shield-connection-bridge.html">Get the Raspberry Pi to Arduino shields connection bridge</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-shield-biometric-medical-arduino-raspberry-pi.html">Get the e-Health sensor shield</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-complete-kit-biometric-medical-arduino-raspberry-pi.html">Get the e-Health complete kit</a></li>
</ul>
<p>&nbsp;</p>
<div class="notas_fondo" style="margin-top: 20px;">
<p><span class="content" style="text-decoration: underline;">Warnings:</span></p>
<ul>
<li>The LCD, the glucometer and communication modules use the UART port and can't work simultaneously.</li>
<li>The LCD and the glucometer use the same connector.</li>
<li>The body position sensor and the sphygmomanometer can't work  simultaneously. Use the jumpers integrated in the board to use one or other. </li>
<li>To use glucometer , you'll need to have the jumpers in the SPHY position. To use body 	position sensor, you'll need to have the jumpers in the POS configuration.</li>
</ul>
<p>&nbsp;</p>
</div>
<p>&nbsp;</p>
<div style="float: right;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#index" class="top_link"><img border="0" alt="up" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arrow_up.png" style="width: auto !important; height: auto !important; border: none; vertical-align: text-bottom; margin: 0;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/arrow_up.png"><span style="margin-left: 5px; color: #87888a;">Go to index</span></a></div>
<div style="clear: both;">&nbsp;</div>
<!-- STEP 3 -->
<h2><a name="step3" class="ancla">3. The library.</a></h2>
<p>The e-health Sensor Platform counts with a C++ library that lets you read easily all the sensors and send the information by using any of the available radio interfaces.  This library offers an simple-to-use open source system.</p>
<p>In order to ensure the same code is compatible in both platforms (Arduino and Raspberry Pi) we use the ArduPi libraries which allows developers to use the same code. Detailed info can be found here:</p>
<ul>
<li> <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge?utm_source=banner_raspberry">Raspberry Pi to Arduino shields connection bridge </a></li>
<li> <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge?utm_source=banner_raspberry&utm_medium=banner#step4">ArduPi library</a></li>
</ul>
<h4>Using the library with Arduino</h4>
<p>The eHealth sensor platform includes a high level library functions for a easy manage of the board. Before start using this functions you should download the files from this <a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/eHealth_arduino.zip">link</a>. This zip includes all the files needed in two separated folders, “eHealth”  and “PinChangeInt”. The “PinChangeInt” library is necessary only when you use the pulsioximeter sensor.  Copy this folders in the arduino IDE folder “libraries”.  Don't forget include these libraries in your codes.</p>
<p><a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/eHealth_arduino.zip">Download the e-Health library for Arduino <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/download_icon.png" border="0" style="width: auto !important; height: auto !important; vertical-align: middle; background: none; margin: 0; padding: 0;"></a></p>
<p>Libraries are often distributed as a ZIP file or folder. The name of the folder is the name of the library. Inside the folder will be the .cpp files,  .h files and often a keywords.txt file, examples folder, and other files required by the library.</p>
<p>To install the library, first quit the Arduino application.  Then uncompress the ZIP file containing the library. For installing eHealth library , uncompress eHealth.zip. It should contain a folder called “eHealth” and another called “PinChangeInt”, with files like eHealth.cpp and eHealth.h inside.  Drag the eHealth and PinChange folders into this folder (your libraries folder). Under Windows, it will likely be called "My Documents\Arduino\libraries". For Mac users, it will likely be called "Documents/Arduino/libraries". On Linux, it will be the "libraries" folder in your sketchbook.</p>
<p>The library won't work if you put the .cpp and .h files directly into the libraries folder or if they're nested in an extra folder. Restart the Arduino application. Make sure the new library appears in the Sketch-&gt;Import Library menu item of the software.</p>
<p>That's it! You've installed a library!</p>
<h4>Using the library with Raspberry Pi</h4>
<p>The <a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/eHealth_raspberry.zip">e-Health library for Raspberry Pi</a> requires the <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge?utm_source=banner_raspberry&utm_medium=banner#step4">arduPi library</a> and both libraries should be in the same path.</p>
<p><a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/eHealth_raspberry.zip">Download the e-Health Libraries for Raspberry <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/download_icon.png" border="0" style="width: auto !important; height: auto !important; vertical-align: middle; background: none; margin: 0; padding: 0;"></a></p>
<p>Creating a program that uses the library is as simple as putting your code in this template where it says "your arduino code here"</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">//Include eHealth library (it includes arduPi)
#include "eHealth.h"

//Needed for Serial communication
SerialPi Serial;

//Needed for accesing GPIO (pinMode, digitalWrite, digitalRead, i2C functions)
WirePi Wire;

//Needed for SPI
SPIPi SPI;

//Needed for eHealth
eHealthClass eHealth;

/*********************************************************
 *  IF YOUR ARDUINO CODE HAS OTHER FUNCTIONS APART FROM  *
 *  setup() AND loop() YOU MUST DECLARE THEM HERE        *
 * *******************************************************/

/**************************
 * YOUR ARDUINO CODE HERE *
 * ************************/

int main (){
	setup();
	while(1){
		loop();
	}
	return (0);
}

	</pre>
</div>
<p>Compilation of the program can be done in two ways:</p>
<ul>
<li> Compiling separately eHealth and arduPi, and using them for compiling the program in a second step:
<pre><br></pre>
<pre>g++ -c arduPi.cpp -o arduPi.o</pre>
<pre><br></pre>
<pre>g++ -c eHealth.cpp -o eHealth.o</pre>
<pre><br></pre>
<pre>g++ -lpthread -lrt user-e-health-app.cpp arduPi.o eHealth.o -o user-e-health-app</pre>
<pre><br></pre>
</li>
<li>Compiling everithing in one step:
<p>g++ -lpthread -lrt user-e-health-app.cpp arduPi.cpp eHealth.cpp -o user-e-health-app</p>
</li>
</ul>
<p>Executing your program is as simple as doing:</p>
<pre>sudo ./user-e-health-app</pre>
<p>&nbsp;</p>
<h4>General e-Health functions</h4>
<p>Pulsioximeter sensor functions:</p>
<ul>
<li>
<pre>initPulsioximeter() // It initialize the pulsioximeter sensor.</pre>
</li>
<li>
<pre>readPulsioximeter() // It reads a value from pulsioximeter sensor.</pre>
</li>
<li>
<pre>getBPM() // Returns the heart beats per minute.</pre>
</li>
<li>
<pre>getOxygenSaturation() // Returns the oxygen saturation in blood in percent.</pre>
</li>
</ul>
<p>ECG sensor funcion:</p>
<ul>
<li>
<pre>getECG() // Returns an analogic value to represent the Electrocardiography.</pre>
</li>
<p>AirFlow sensor funcions:</p>
<li>
<pre>getAirFlow() // Returns an analogic value to represent the air flow.</pre>
</li>
<li>
<pre>airFlowWave() // Prints air flow wave form in the serial monitor.</pre>
</li>
<p>Temperature sensor function:</p>
</ul>
<ul>
<li>
<pre>getTemperature() // Returns the corporal temperature.</pre>
</li>
</ul>
<p>Blood pressure functions //</p>
<ul>
<li>
<pre>initBloodPressureSensor() // It initialize  the blood pressure sensor.</pre>
</li>
<li>
<pre>getSystolicPressure() // Returns the  value of the systolic pressure.</pre>
</li>
<li>
<pre>getDiastolicPressure() // Returns the  value of the diastolic pressure.</pre>
</li>
</ul>
<p>Booby position sensor functions:</p>
<ul>
<li>
<pre>initPositionSensor() // It initialize  the position sensor.</pre>
</li>
<li>
<pre>getBodyPosition() // Returns the body position.</pre>
</li>
<li>
<pre>printPosition() // Prints the current body position.</pre>
</li>
</ul>
<p>GSR sensor functions:</p>
<ul>
<li>
<pre>getSkinConductance() // Returns the value of skin conductance.</pre>
</li>
<li>
<pre>getSkinResistance() // Returns the value of skin resistance.</pre>
</li>
<li>
<pre>getSkinConductanceVoltage() // Returns the value of skin conductance in voltage.</pre>
</li>
</ul>
<p>Glucometer sensor functions:</p>
<ul>
<li>
<pre>readGlucometer() // Read the values stored in the glucometer.</pre>
</li>
<li>
<pre>GetGlucometerLength() // Returns the number of data stored in the glucometer.</pre>
</li>
<li>
<pre>numberToMonth() // Convert month variable from numeric to character.</pre>
</li>
</ul>
<div style="float: right;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#index" class="top_link"><img border="0" alt="up" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arrow_up.png" style="width: auto !important; height: auto !important; border: none; vertical-align: text-bottom; margin: 0;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/arrow_up.png"><span style="margin-left: 5px; color: #87888a;">Go to index</span></a></div>
<div style="clear: both;">&nbsp;</div>
<!-- STEP 4 -->
<h2><a name="step4" class="ancla">4. Sensor Platform.</a></h2>
<h4><a name="step4_1" class="ancla">Pulse and Oxygen in Blood (SPO2)</a></h4>
<p><strong><a name="step4_1_1" class="ancla">SPO2 sensor features</a></strong></p>
<p>Pulse oximetry a noninvasive method of indicating the arterial oxygen saturation of functional hemoglobin.<br> Oxygen saturation is defined as the measurement of the amount of oxygen dissolved in blood, based on the detection of Hemoglobin and Deoxyhemoglobin. Two different light wavelengths are used to measure the actual difference in the absorption spectra of HbO2 and Hb. The bloodstream is affected by the concentration of HbO2 and Hb, and their absorption coefficients are measured using two wavelengths 660 nm (red light spectra) and 940 nm (infrared light spectra). Deoxygenated and oxygenated hemoglobin absorb different wavelengths.</p>
<p>&nbsp;</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="pulsometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pulsometro.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pulsometro.png"></div>
<p>Deoxygenated hemoglobin (Hb) has a higher absorption at 660 nm and oxygenated hemoglobin (HbO2) has a higher absorption at 940 nm . Then a  photo-detector perceives the non-absorbed light from the LEDs to calculate the arterial oxygen saturation.</p>
<p>&nbsp;</p>
A <a href="http://www.cooking-hacks.com/index.php/pulse-and-oxygen-in-blood-sensor-spo2-ehealth-medical.html">pulse oximeter sensor</a> is useful in any setting where a patient's oxygenation is unstable, including intensive care, operating, recovery, emergency and hospital ward settings, pilots in unpressurized aircraft, for assessment of any patient's oxygenation, and determining the effectiveness of or need for supplemental oxygen.
<p>&nbsp;</p>
Acceptable normal ranges for patients are from 95 to 99 percent, those with a hypoxic drive problem would expect values to be between 88 to 94 percent, values of 100 percent can indicate carbon monoxide poisoning.
<p>&nbsp;</p>
The sensor needs to be connected to the Arduino or Raspberry Pi, and don't use external/internal battery.
<p>&nbsp;</p>
<strong><a name="step4_1_2" class="ancla">Connecting the sensor</a></strong><br>
<p>Connect the module in the e-Health sensor platform. The sensor have only one way of connection to prevent errors and make the connection easier.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="ehealth_y_pulsometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e_health_y_pulsometro.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e_health_y_pulsometro.png"></div>
Insert your finger into the sensor and press ON button.
<div style="margin: auto; text-align: center;"><img border="0" alt="pulsometro_dedo" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pulsometro_negro_dedo.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pulsometro_negro_dedo.png"></div>
After a few seconds you will get the values in the sensor screen.
<div style="margin: auto; text-align: center;"><img border="0" alt="pulsometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pulsometro_dedo.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pulsometro_dedo.png"></div>
<strong><a name="step4_1_3" class="ancla">Library functions</a></strong><br>
<p><strong>Initializing</strong></p>
<p>This sensor use interruptions and it is necessary to include a special library when you are going to use it.</p>
<p>&nbsp;</p>
<pre>		#include &lt; PinChangeInt.h &gt;

</pre>
<p>&nbsp;</p>
<p>After this include, you should attach the interruptions in your code to get data from th sensor. The sensor will interrupt the process to refresh the data stored in private variables.</p>
<p>&nbsp;</p>
<pre>PCintPort::attachInterrupt(6, readPulsioximeter, RISING);</pre>
<p>&nbsp;</p>
<p>The digital pin 6 of Arduino is the pin where sensor send the interruption and the function readpulsioximeter will be executed.</p>
<p>&nbsp;</p>
<pre>		void readPulsioximeter(){    
	  		cont ++; 
			if (cont == 50) { //Get only one 50 measures to reduce the latency
	   	 		eHealth.readPulsioximeter();  
	   	 		cont = 0;
	  	  	}
		}
		</pre>
<p>Before start using the SP02 sensor, it must be initialized. Use the next function in setup to configure some basic parameters and to start the communication between the Arduino/RaspberryPi and sensor.</p>
<p><strong>Reading the sensor</strong></p>
For reading the current value of the sensor, use the next function. <br> Example:<br>
<pre>	{
		eHealth.readPulsioximeter();
	}
				</pre>
This function will store the values of the sensor in private variables.<br>
<p><strong>Getting data</strong></p>
To view data we can get the values of the sensor stored in private variable by using the next functions.<br> Example:<br>
<pre>	{
		int SPO2 = eHealth.getOxygenSaturation()

		int BPM = eHealth.getBPM()
	}
			</pre>
<strong><a name="step4_1_4" class="ancla">Example</a></strong><br> <strong>Arduino</strong>
<p>&nbsp;</p>
Upload the next code for seeing data in the serial monitor:<br>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)." 
 *
 *  In this example we read the values of the pulsioximeter sensor 
 *  and we show this values in the serial monitor
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad
 */


#include &lt; PinChangeInt.h &gt;
#include &lt; eHealth.h &gt;

int cont = 0;

void setup() {
  Serial.begin(115200);  
  eHealth.initPulsioximeter();

  //Attach the inttruptions for using the pulsioximeter.   
  PCintPort::attachInterrupt(6, readPulsioximeter, RISING);
}

void loop() {

  Serial.print("PRbpm : "); 
  Serial.print(eHealth.getBPM());

  Serial.print("    %SPo2 : ");
  Serial.print(eHealth.getOxygenSaturation());

  Serial.print("\n");  
  Serial.println("============================="); 
  delay(500);
}


//Include always this code when using the pulsioximeter sensor
//=========================================================================
void readPulsioximeter(){  

  cont ++;

  if (cont == 50) { //Get only one 50 measures to reduce the latency
    eHealth.readPulsioximeter();  
    cont = 0;
  }
}

		</pre>
</div>
<p>Upload the code to Arduino and watch the Serial monitor.Here is the USB output using the Arduino IDE serial port terminal:</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="pulsioximetro_arduino" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Ejemplo_Pulsioximetro_.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Ejemplo_Pulsioximetro_.png"></div>
<p><strong>Raspberry Pi</strong></p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">//Include ArduPi library
#include "eHealth.h"

//Needed for eHealth
eHealthClass eHealth;

int cont = 0;

void readPulsioximeter();

void setup() { 

	eHealth.initPulsioximeter();
	//Attach the inttruptions for using the pulsioximeter.
	attachInterrupt(6, readPulsioximeter, RISING);
    
}

void loop() { 

  printf("PRbpm : %d",eHealth.getBPM()); 

  printf("    %%SPo2 : %d\n", eHealth.getOxygenSaturation());

  printf("=============================");
  
  digitalWrite(2,HIGH);
  
  delay(500);
  
}

void readPulsioximeter(){  

  cont ++;
  if (cont == 500) { //Get only of one 50 measures to reduce the latency
    eHealth.readPulsioximeter();  
    cont = 0;
  }
}

int main (){
	setup();
	while(1){
		loop();
	}
	return (0);
}


</pre>
</div>
<p><strong>Mobile app</strong></p>
<p>The App shows the information the nodes are sending which contains the sensor data gathered. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_5">Smartphone app</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="iphone_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/iphone_4.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/iphone_4.png"></div>
<p><strong>GLCD</strong></p>
<p>The GLCD shows the information the nodes are sending which contains the sensor data gathered. <a href="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications].htm">GLCD</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="iphone_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla1.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla1.png"></div>
<p><a href="http://www.cooking-hacks.com/index.php/pulse-and-oxygen-in-blood-sensor-spo2-ehealth-medical.html">Get the Pulse and Oxygen in Blood Sensor (SPO2)</a></p>
<h4><a name="step4_2" class="ancla">Electrocardiogram (ECG)</a></h4>
<p><strong><a name="step4_2_1" class="ancla">ECG sensor features</a></strong></p>
<p>The electrocardiogram (ECG or EKG) is a diagnostic tool that is routinely used to assess the electrical and muscular functions of the hear.</p>
<p>&nbsp;</p>
The <a href="http://www.cooking-hacks.com/index.php/electrocardiogram-sensor-ecg-ehealth-medical.html">Electrocardiogram Sensor (ECG)</a> has grown to be one of the most commonly used medical tests in modern medicine. Its utility in the diagnosis of a myriad of cardiac pathologies ranging from myocardial ischemia and infarction to syncope and palpitations has been invaluable to clinicians for decades.
<p>&nbsp;</p>
The accuracy of the ECG depends on the condition being tested. A heart problem may not always show up on the ECG. Some heart conditions never produce any specific ECG changes. ECG leads are attached to the body while the patient lies flat on a bed or table.
<p>&nbsp;</p>
<strong>What is measured or can be detected on the ECG (EKG)?</strong>
<p>&nbsp;</p>
The orientation of the heart (how it is placed) in the chest cavity. <br> Evidence of increased thickness (hypertrophy) of the heart muscle. <br> Evidence of damage to the various parts of the heart muscle. <br> Evidence of acutely impaired blood flow to the heart muscle. <br> Patterns of abnormal electric activity that may predispose the patient to abnormal cardiac rhythm disturbances. <br> The underlying rate and rhythm mechanism of the heart.
<p>&nbsp;</p>
<strong>Schematic representation of normal ECG</strong>
<div style="margin: auto; text-align: center;"><a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/SinusRhythmLabels_big.png"><img border="0" alt="sinus_rhythmlabels" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/SinusRhythmLabels_small.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/SinusRhythmLabels_small.png"></a></div>
<p>&nbsp;</p>
<p><strong><a name="step4_2_2" class="ancla">Connecting the sensor</a></strong></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="parches presentación" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/parches_presentacion.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/parches_presentacion.png"></div>
<p>Connect the three leads (positive, negative and neutral) in the e-Health board.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="parches ehealth" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/parches+e_health1.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/parches+e_health1.png"> <img border="0" alt="parches ehealth" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e-Health_button1-01.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health_button1-01.png"></div>
<p>Connect the ECG lead to the electrodes.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="montaje parches" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/montaje_parches.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/montaje_parches.png"></div>
<p>Remove the protective plastic</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="quitando pegatinas" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/quitando_pegatinas_parches.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/quitando_pegatinas_parches.png"></div>
<p>Place the electrodes as shown below</p>
<img border="0" alt="body" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/muñeco.png" style="float: left; width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/muñeco.png"> <img border="0" alt="human_body" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/yuri.png" style="float: right; width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/yuri.png">
<div style="clear: both;"><strong><a name="step4_2_3" class="ancla">Library functions</a></strong><br>
<p>Getting data:</p>
<p>This ECG returns an analogic value in volts (0 – 5) to represent the ECG wave form.</p>
<p>Example</p>
<pre>	{
		float ECGvolt = eHealth.getECG();
	}
		</pre>
<strong><a name="step4_2_4" class="ancla">Example</a></strong><br>
<p><strong>Arduino</strong></p>
Upload the next code for seeing data in the serial monitor: <br>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">	

/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)."
 *
 *  In this example we read the values in volts of ECG sensor and show
 *  these values in the serial monitor. 
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad
 */

#include &lt; eHealth.h &gt;

// The setup routine runs once when you press reset:
void setup() {
  Serial.begin(115200);  
}

// The loop routine runs over and over again forever:
void loop() {

  float ECG = eHealth.getECG();

  Serial.print("ECG value :  ");
  Serial.print(ECG, 2); 
  Serial.print(" V"); 
  Serial.println(""); 

  delay(1);	// wait for a millisecond
}

</pre>
</div>
Upload the code and watch the Serial monitor. Here is the USB output using the Arduino IDE serial port terminal:
<p>&nbsp;</p>
<p><strong>Raspberry Pi</strong></p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">//Include ArduPi library
#include "eHealth.h"

//Needed for eHealth
eHealthClass eHealth;

// The loop routine runs over and over again forever:
void loop() {

  float ECG = eHealth.getECG();

  printf("ECG value :  %f V\n",ECG);
  delay(1000);
}

int main (){
	//setup();
	while(1){
		loop();
	}
	return (0);
}


</pre>
</div>
<p><strong>Mobile App</strong></p>
<p>The App shows the information the nodes are sending which contains  the sensor data gathered. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_5">Smartphone app</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="android_8" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/android_8.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/android_8.png"></div>
<p><strong>GLCD</strong></p>
<p>The GLCD shows the information the nodes are sending which contains  the sensor data gathered. <a href="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications].htm">GLCD</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="pantalla5" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla5.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla5.png"></div>
<p><strong>KST</strong></p>
<p>KST program shows the ECG wave. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_3"></a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="ecg_measure" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/ecg_measure.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/ecg_measure.png"></div>
<p><a href="http://www.cooking-hacks.com/index.php/electrocardiogram-sensor-ecg-ehealth-medical.html">Get the Electrocardiogram Sensor (ECG)</a></p>
<h4><a name="step4_3" class="ancla">Airflow: breathing</a></h4>
<p><strong><a name="step4_3_1" class="ancla">Airflow sensor features</a></strong></p>
<p>Anormal respiratory rates and changes in respiratory rate are a broad indicator of major physiological instability, and in many cases, respiratory rate is one of the earliest indicators of this instability. Therefore, it is critical to monitor respiratory rate as an indicator of patient status. AirFlow sensor can provide an early warning of hypoxemia and apnea.</p>
<p>The <a href="http://www.cooking-hacks.com/index.php/airflow-sensor-breathing-ehealth-medical.html"> nasal / mouth airflow sensor </a> is a device used to measure the breathing rate in a patient in need of respiratory help or person. This device consists of a flexible thread which fits behind the ears, and a set of two prongs which are placed in the nostrils. Breathing is measured by these prongs.</p>
<p>The specifically designed cannula/holder allows the thermocouple sensor to be placed in the optimal position to accurately sense the oral/nasal thermal airflow changes as well as the nasal temperature air. Comfortable adjustable and easy to install.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="canula_presentacion" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/canula_presentacion.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/canula_presentacion.png"></div>
Single channel oral or nasal reusable Airflow Sensor. Stay-put prongs position sensor precisely in airflow path.<br> A normal adult human has a respiratory rate of 15–30 breaths per minute.<br>
<div style="margin: auto; text-align: center;"><img border="0" alt="air_glow" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/airglow.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/airglow.png"></div>
<p><strong><a name="step4_3_2" class="ancla">Connecting the sensor</a></strong></p>
The e-Health AirFlow sensor have two connections (positive and negative) <br> <img border="0" alt="detalle_canula_presentacion" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/detalle_canula_presentacion.png" style="float: left; width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/detalle_canula_presentacion.png"> <img border="0" alt="e-Health_button2-01" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e-Health_button2-01.png" style="float: right; width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health_button2-01.png">
<div style="clear: both;">&nbsp;</div>
Connect the red wire with the positive terminal (marked as “+” in the board) and the black wire with the negative terminal (marked as “-” in the board). <br>
<div style="margin: auto; text-align: center;"><img border="0" alt="e_health_canula_conectando" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e_health_canula_conectando.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e_health_canula_conectando.png"></div>
After connecting the cables, tighten the screws <br>
<div style="margin: auto; text-align: center;"><img border="0" alt="canula+e_health" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/canula+e_health.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/canula+e_health.png"></div>
Place the sensor as shown in the picture below <br>
<div style="margin: auto; text-align: center;"><img border="0" alt="montaje_luis_canula_airflow" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/montaje_luis_canula_airflow.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/montaje_luis_canula_airflow.png"></div>
<p><strong><a name="step4_3_3" class="ancla">Library functions</a></strong></p>
<p><strong>Getting data</strong></p>
<p>The air flow sensor is connected to the Arduino/RasberryPi by an analog input and returns a value from 0 to 1024. With the next functions you can get this value directly and print a wave form in the serial monitor.</p>
<p><strong>Example: </strong></p>
<p>&nbsp;</p>
<pre>	{
		int airFlow = eHealth.getAirFlow();
		eHealth.airFlowWave(air);
	}
</pre>
<p>&nbsp;</p>
<p><strong><a name="step4_3_4" class="ancla">Example</a></strong></p>
<p><strong>Arduino</strong></p>
Upload the next code for seeing data in the serial monitor:<br>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)."
 *
 *  In this example we read the values in volts of ECG sensor and show
 *  these values in the serial monitor. 
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad
 */

#include &lt; eHealth.h &gt;

// The setup routine runs once when you press reset:
void setup() {
  Serial.begin(115200);  
}

// The loop routine runs over and over again forever:
void loop() {

  float ECG = eHealth.getECG();

  Serial.print("ECG value :  ");
  Serial.print(ECG, 2); 
  Serial.print(" V"); 
  Serial.println(""); 

  delay(1);	// wait for a millisecond
}


		</pre>
</div>
Upload the code and watch the Serial monitor.Here is the USB output using the Arduino IDE serial port terminal:<br>
<div style="margin: auto; text-align: center;"><img border="0" alt="Ejemplo_AirFlow" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Ejemplo_AirFlow_.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Ejemplo_AirFlow_.png"></div>
<p><strong>Raspberry Pi</strong></p>
<p>Compile this example code:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">	

//Include eHealth library
#include "eHealth.h"

//Needed for eHealth
eHealthClass eHealth;

extern SerialPi Serial;

void setup() { 
	 
}

void loop() { 
	int air = eHealth.getAirFlow();   
	eHealth.airFlowWave(air);  
	delay(100);
}

int main (){
	setup();
	while(1){
		loop();
	}
	return (0);
}

</pre>
</div>
<p><strong>Mobile App</strong></p>
<p>The App shows the information the nodes are sending which contains  the sensor data gathered. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_5">Smartphone app</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="iphone_3" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/iphone_3.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/iphone_3.png"></div>
<p><strong>GLCD</strong></p>
<p>The GLCD shows the information the nodes are sending which contains the sensor data gathered. <a href="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications].htm">GLCD</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="breathing_measure" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla4.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla4.png"></div>
<p><strong>KST</strong></p>
<p>KST program shows the ECG wave. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_3"></a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="breathing_measure" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/breathing_measure.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/breathing_measure.png"></div>
<p><a href="http://www.cooking-hacks.com/index.php/airflow-sensor-breathing-ehealth-medical.html"> Get the Airflow Sensor (Breathing)</a></p>
<h4><a name="step4_4" class="ancla">Body temperature</a></h4>
<strong><a name="step4_4_1" class="ancla">Temperature sensor features</a></strong><br>
<p>Body temperature depends upon the place in the body at which the measurement is made, and the time of day and level of activity of the person. Different parts of the body have different temperatures.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="elementos_pulsometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/elementos_pulsometro.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/elementos_pulsometro.png"></div>
<p>The commonly accepted average core body temperature (taken internally) is 37.0°C (98.6°F). In healthy adults, body temperature fluctuates about 0.5°C (0.9°F) throughout the day, with lower temperatures in the morning and higher temperatures in the late afternoon and evening, as the body's needs and activities change.</p>
<p>It is of great medical importance to measure body temperature. The reason is that a number of diseases are accompanied by characteristic changes in body temperature. Likewise, the course of certain diseases can be monitored by measuring body temperature, and the efficiency of a treatment initiated can be evaluated by the physician.</p>
<strong>Hypothermia</strong> &lt;35.0 °C (95.0 °F)<br> <strong>Normal</strong> 36.5–37.5 °C (97.7–99.5 °F)<br> <strong>Fever or Hyperthermia</strong> &gt;37.5–38.3 °C (99.5–100.9 °F)<br> <strong>Hyperpyrexia</strong> &gt;40.0–41.5 °C (104–106.7 °F)<br>
<p><strong><a name="step4_4_2" class="ancla">Sensor Calibration</a></strong></p>
<p>The precision of the <a href="http://www.cooking-hacks.com/index.php/body-temperature-sensor-ehealth-medical.html"> Body Temperature Sensor</a> is enough in most applications. But you can improve this precision by a calibration process.</p>
<p>When using temperature sensor, you are actually measuring a voltage, and relating that to what the operating temperature of the sensor must be. If you can avoid errors in the voltage measurements, and represent the relationship between voltage and temperature more accurately, you can get better temperature readings.</p>
<p>Calibration is a process of measuring voltage and resistance real values. In the eHealth.cpp file we can find getTemperature function. The values [Rc, Ra, Rb, RefTension] are imprecisely defined by default.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="temperatura" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Temperatura.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Temperatura.png"></div>
<p>If you measure these values with a multimeter and modify the library will obtain greater accuracy.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="e-Health_button3-01" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e-Health_button3-01.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health_button3-01.png"></div>
<p>Place multimeter ends at the extremes of the resistors and measure the resistance value. In this case we would modify resistance value (Ra=4640 / Rb=819)...</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="1_det" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/1_det.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/1_det.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="2_det" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/2_det.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/2_det.png"></div>
<p>Make the same process between 3V (red cable) and GND (black cable) but with the multimeter in voltage measurement. In this case we would not change the value.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="elementos_pulsometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/3_det.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/3_det.png"></div>
<p><strong><a name="step4_4_3" class="ancla">Connecting the sensor</a></strong></p>
<p>For taking measures of temperature, connect the sensor in the jack connector using the adapter</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="conectando_elementos_pulsometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/conectando_elementos_pulsometro.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/conectando_elementos_pulsometro.png"></div>
<p>Make contact between the metallic part and your skin</p>
<p>Use a piece of adhesive tape to hold the sensor attached to the skin</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="tmp" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/tmp.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/tmp.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="cinta_aislante" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/cinta_aislante.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/cinta_aislante.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="sensor_dedo" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/sensor_dedo.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/sensor_dedo.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="sensor_dedo_puesto" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/sensor_dedo_puesto.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/sensor_dedo_puesto.png"></div>
<p><strong><a name="step4_4_4" class="ancla">Library functions</a></strong></p>
<p>Geting data</p>
<p>The corporal temperature can be taken by a simple function. This function return a float with the last value of temperature measured by the Arduino/RasberryPi.</p>
<p>Example:</p>
<pre>	{
		float temperature = eHealth.getTemperature();
	}
</pre>
<p><strong><a name="step4_4_5" class="ancla">Example</a></strong></p>
<p><strong>Arduino</strong></p>
<p>Upload the next code for seeing data in the serial monitor:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">		/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)."  
 *
 *  In this example we use the temperature sensor to measure the 
 *  corporal temperature of the body.
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad
 */

#include &lt; eHealth.h &gt;

// the setup routine runs once when you press reset:
void setup() {
  Serial.begin(115200);  
}

// the loop routine runs over and over again forever:
void loop() {
  float temperature = eHealth.getTemperature();

  Serial.print("Temperature (ºC): ");       
  Serial.print(temperature, 2);  
  Serial.println(""); 

  delay(1000);	// wait for a second 
}


	</pre>
</div>
<p>Upload the code and watch the Serial monitor. Here is the USB output using the Arduino IDE serial port terminal:</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="Ejemplo_Temperatura_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Ejemplo_Temperatura_.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Ejemplo_Temperatura_.png"></div>
<p><strong>Raspberry Pi</strong></p>
<p>Compile the following example code:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">	

//Include eHealth library
#include "eHealth.h"

//Needed for eHealth
eHealthClass eHealth;

extern SerialPi Serial;


void setup() { 
	 
}

void loop() { 
	float temperature = eHealth.getTemperature();   
	printf("Temperature : %f \n", temperature);
	delay(2000);
}

int main (){
	setup();
	while(1){
		loop();
	}
	return (0);
}


</pre>
</div>
<p><strong>Mobile App</strong></p>
<p>The App shows the information the nodes are sending which contains  the sensor data gathered. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_5">Smartphone app</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="android_6" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/android_6.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/android_6.png"></div>
<p><strong>GLCD</strong></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="GLCD" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla1.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla1.png"></div>
<p><a href="http://www.cooking-hacks.com/index.php/body-temperature-sensor-ehealth-medical.html"> Get the Body Temperature Sensor</a></p>
<h4><a name="step4_5" class="ancla">Blood pressure</a></h4>
<p><strong><a name="step4_5_1" class="ancla">Blood pressure sensor features</a></strong></p>
<p>Blood pressure is the pressure of the blood in the arteries as it is pumped around the body by the heart. When your heart beats, it contracts and pushes blood through the arteries to the rest of your body. This force creates pressure on the arteries. Blood pressure is recorded as two numbers—the systolic pressure (as the heart beats) over the diastolic pressure (as the heart relaxes between beats).</p>
<p>Monitoring blood pressure at home is important for many people, especially if you have high blood pressure. Blood pressure does not stay the same all the time. It changes to meet your body’s needs. It is affected by various factors including body position, breathing or emotional state, exercise and sleep. It is best to measure blood pressure when you are relaxed and sitting or lying down.</p>
<p><strong>Classification of blood pressure for adults (18 years and older)</strong></p>
<table>
<tbody>
<tr>
<td>&nbsp;</td>
<td><strong>Systolic (mm Hg)</strong></td>
<td><strong>Diastolic (mm Hg)</strong></td>
</tr>
<tr>
<td><strong>Hypotension</strong></td>
<td>&lt; 90</td>
<td>&lt; 60</td>
</tr>
<tr>
<td><strong>Desired</strong></td>
<td>90–119</td>
<td>60–79</td>
</tr>
<tr>
<td><strong>Prehypertension</strong></td>
<td>120–139</td>
<td>80–89</td>
</tr>
<tr>
<td><strong>Stage 1 Hypertension</strong></td>
<td>140–159</td>
<td>90–99</td>
</tr>
<tr>
<td><strong>Stage 2 Hypertension</strong></td>
<td>160–179</td>
<td>100–109</td>
</tr>
<tr>
<td><strong>Hypertensive Crisis</strong></td>
<td>≥ 180</td>
<td>≥ 110</td>
</tr>
</tbody>
</table>
<p>High blood pressure (hypertension) can lead to serious problems like heart attack, stroke or kidney disease. High blood pressure usually does not have any symptoms, so you need to have your blood pressure checked regularly.</p>
<p>The sensor needs to be connected to the Arduino and use internal battery (2X3A)</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="tensiometro_presentacion" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/tensiometro_presentacion.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/tensiometro_presentacion.png"></div>
<p><strong><a name="step4_5_2" class="ancla">Sensor Calibration</a></strong></p>
<p>The precision of the <a href="http://www.cooking-hacks.com/index.php/blood-pressure-sensor-sphygmomanometer-ehealth-medical.html">Blood Pressure Sensor (Sphygmomanometer)</a> is enough in most applications. But you can improve this precision by a calibration process.</p>
<p>The calibration of this sensor is complicated. Libelium team handles make and provides a calibration offset value.</p>
<p>We only need to modify the parameter in our code.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="pegatina_tensiometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pegatina_tensiometro.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pegatina_tensiometro.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="Tensionometre" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Tensionometre.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Tensionometre.png"></div>
<p><strong><a name="step4_5_3" class="ancla">Connecting the sensor</a></strong></p>
<p>The first thing we are going to do with the module is to connect the jumpers in right position. In this case, jumpers have to be set on SPHY gateway position.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="pulsometro_conectando_e_health" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pulsometro_conectando_e_health.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pulsometro_conectando_e_health.png"></div>
<p>Connect the jack cable with the sphygmomanometer and the e-Health board.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="tensiometro+e_health" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/tensiometro+e_health.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/tensiometro+e_health.png"></div>
<p>Place the sphygmomanometer on your wrist as shown in the image below. Palm up and the rigth side of the blood-pressure meter up, wrap the cuff around the left wrist from 5-10mm (about a pinky finger width).</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="tensiometro_conector" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/tensiometro_conector.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/tensiometro_conector.png"></div>
<p>To  correct measure is important to maintain the heart and the wrist in the horizontal plane.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="tensionometer_man" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/tensionometer_man.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/tensionometer_man.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="luis2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/luis2.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/luis2.png"></div>
<p>Press On/Off button and wait while the  sphygmomanometer is taking the measure.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="pulsando_boton_pulsometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pulsando_boton_pulsometro.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pulsando_boton_pulsometro.png"></div>
<p>After a few seconds the result is shown in the  sphygmomanometer screen and in the Arduino serial monitor. The measure is taken independently by the Arduino/RasberryPi, and may not match exactly, but the values should be very similar. Do not make abrupt movements or the measure will be not reliable.</p>
<p><strong><a name="step4_5_4" class="ancla">Library functions</a></strong></p>
<p><strong>Initializing  blood pressure sensor </strong></p>
<p>Some parameters must be initialized to start using blood pressure sensor (sphygmomanometer). The next function initializes some variables and wait until the on/off button of the sphygmomanometer is pressed.</p>
<p>Example:</p>
<pre>	{
		float parameter = -0.1;
		eHealth.initBloodPressureSensor(parameter);		
	}
		</pre>
<p>Due to a calibration process, all the  sphygmomanometer have a special parameter that must be introduced in the code.</p>
<strong>Getting data</strong>
<p>The next functions return the values of systolic and diastolic pressure measured by the  sphygmomanometer and stored in private variables of the e-Health class.</p>
<p>Example:</p>
<pre>	}
		int systolic = Serial.println(eHealth.getSystolicPressure());      
		int diastolic = 	Serial.println(eHealth.getDiastolicPressure());
	}
</pre>
<p><strong><a name="step4_4_5" class="ancla">Example</a></strong></p>
<p><strong>Arduino</strong></p>
<p>Upload the next code for seeing data in the serial monitor:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)." 
 *  
 *  In this example we are going to measure the blood pressure
 *  and show the result in the serial monitor.   
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see  .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad
 */


#include &lt; eHealth.h &gt;

//This parameter must be introduced manually.
//Please see the tutorial for more information. 
float parameter = 0.0;

void setup() {
  Serial.begin(115200);
  Serial.println("Press On/Off button please...");

}

void loop() {

  eHealth.initBloodPressureSensor(parameter);

  Serial.println("****************************");
  Serial.print("Systolic blood pressure value : ");
  Serial.println(eHealth.getSystolicPressure());
  delay(10);

  Serial.println("****************************");
  Serial.print("Diastolic blood pressure value : ");
  Serial.println(eHealth.getDiastolicPressure());
  delay(10); 

  delay(3000);   
}
			</pre>
</div>
<p>Upload the code and watch the Serial monitor.Here is the USB output using the Arduino IDE serial port terminal:</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="Ejemplo_PresionSanguinea_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Ejemplo_PresionSanguinea_.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Ejemplo_PresionSanguinea_.png"></div>
<p><strong>Raspberry Pi</strong></p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">			</pre>
</div>
<p><strong>Mobile App</strong></p>
<p>The App shows the information the nodes are sending which contains  the sensor data gathered. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_5">Smartphone app</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="iphone_5" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/iphone_5.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/iphone_5.png"></div>
<p><strong>GLCD</strong></p>
<p>The GLCD shows the information the nodes are sending which contains the sensor data gathered. <a href="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications].htm">GLCD</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="GLCD" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla1.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla1.png"></div>
<p><a href="http://www.cooking-hacks.com/index.php/blood-pressure-sensor-sphygmomanometer-ehealth-medical.html">Get the Blood Pressure Sensor (Sphygmomanometer)</a></p>
<h4><a name="step4_6" class="ancla">Patient position and falls</a></h4>
<p><strong><a name="step4_6_1" class="ancla">Position sensor features</a></strong></p>
<p>The <a href="http://www.cooking-hacks.com/index.php/patient-position-sensor-accelerometer-ehealth-medical.html"> Patient Position Sensor (Accelerometer)</a> monitors five different patient positions (standing/sitting, supine, prone, left and right.)</p>
<p>In many cases, it is necessary to monitor the body positions and movements made  because of their relationships to particular diseases (i.e., sleep apnea and restless legs syndrome). Analyzing movements during sleep also helps in determining sleep quality and irregular sleeping patterns. The body position sensor could help also to detect fainting or falling of elderly people or persons with disabilities.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="pulsometro_pecho_presentacion" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pulsometro_pecho_presentacion.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pulsometro_pecho_presentacion.png"></div>
<p>eHealth Body Position Sensor uses a triple axis accelerometer to obtain the patient's position.</p>
<p>Features:</p>
<ul>
<li>1.95 V to 3.6 V supply voltage </li>
<li>1.6 V to 3.6 V interface voltage </li>
<li>±2g/±4g/±8g dynamically selectable full-scale </li>
</ul>
<p>This accelerometer is packed with embedded functions with flexible user programmable options, configurable to two interrupt pins.The accelerometer has user selectable full scales of ±2g/±4g/±8g with high pass filtered data as well as non filtered data available real-time.</p>
<p><strong> Body positions: </strong></p>
<img border="0" alt="body_positions" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/positions.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/positions.png">
<p><strong><a name="step4_6_2" class="ancla">Connecting the sensor</a></strong></p>
<p>The first thing we are going to do with the module is to connect the jumpers in right position. In this case, jumpers have to be set on POS gateway position.</p>
<p>The body position sensor has only one and simple way of connection. Connect the ribbon cable with the  body position sensor and the e-Health board as show in the image below.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="conectando_pulsometro_pecho" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/conectando_pulsometro_pecho.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/conectando_pulsometro_pecho.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="elementos_pulsometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arcoiris_conectando_e_health.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/arcoiris_conectando_e_health.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="e_health+pulsometro_pecho" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e_health+pulsometro_pecho.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e_health+pulsometro_pecho.png"></div>
<p>Place the tape around the chest and the connector placed down</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="luis1" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/luis1.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/luis1.png"></div>
<p><strong><a name="step4_6_3" class="ancla">Library functions</a></strong></p>
<p>The e-Health library allows a simple programing way. With one simple function we can get the position of the patient and show it in the serial monitor of the Arduino/RasberryPi or in the GLCD.</p>
<p><strong>Initializing the sensor</strong></p>
<p>Before start using the sensor, we have to initialize some parameters. Use the next function  to configure the sensor.</p>
<p><strong>Example:</strong></p>
<pre>{
	eHealth.initPositionSensor();
}
</pre>
<p><strong>Getting data</strong></p>
<p>The next functions return the a value that represent the body position stored in private variables of the e-Health class.</p>
<p><strong>Example : </strong></p>
<pre>{
  uint8_t position = eHealth.getBodyPosition(); 
}
</pre>
<p><strong>The position of the pacient</strong></p>
<div style="text-indent: 5em;">1 == Supine position.</div>
<div style="text-indent: 5em;">2 == Left lateral decubitus.</div>
<div style="text-indent: 5em;">3 == Rigth lateral decubitus.</div>
<div style="text-indent: 5em;">4 == Prone position.</div>
<div style="text-indent: 5em;">5 == Stand or sit position.</div>
<p><strong>Printing Data</strong></p>
<p>For representing the data in a easy way in the Arduino/RasberryPi serial monitor, e-health library, includes a printing function.</p>
<p><strong>Example:</strong></p>
<pre>{
	 Serial.print("Current position : ");
	 uint8_t position = eHealth.getBodyPosition(); 
	 eHealth.printPosition(position);  
}
</pre>
<p><strong><a name="step4_6_4" class="ancla">Example</a></strong></p>
<p><strong>Arduino</strong></p>
<p>Upload the next code for seeing data in the serial monitor:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)." 
 *
 *  In this example with the body position sensor we measure 
 *  the current body position of the patient and show it in the serial
 *  monitor.
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see  .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad
 */


#include &lt; eHealth.h &gt;

void setup() {

  Serial.begin(115200);  
  eHealth.initPositionSensor();     
}

void loop() {  

  Serial.print("Current position : ");
  uint8_t position = eHealth.getBodyPosition(); 
  eHealth.printPosition(position);  

  Serial.print("\n");
  delay(1000); //	wait for a second.
}


	</pre>
</div>
<p>Upload the code and watch the Serial monitor.Here is the USB output using the Arduino IDE serial port terminal:</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="Ejemplo_BodyPosition_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Ejemplo_BodyPosition_.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Ejemplo_BodyPosition_.png"></div>
<p><strong>Raspberry Pi</strong></p>
<p>Under development</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">	</pre>
</div>
<p><strong>Mobile App</strong></p>
<p>The App shows the information the nodes are sending which contains  the sensor data gathered. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_5">Smartphone app</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="iphone_6" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/iphone_6.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/iphone_6.png"></div>
<p><strong>GLCD</strong></p>
<p>The GLCD shows the information the nodes are sending which contains the sensor data gathered. <a href="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications].htm">GLCD</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="GLCD" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla1.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla1.png"></div>
<p><a href="http://www.cooking-hacks.com/index.php/patient-position-sensor-accelerometer-ehealth-medical.html">Get the Patient Position Sensor (Accelerometer)</a></p>
<h4><a name="step4_7" class="ancla">Galvanic Skin Response (GSR)</a></h4>
<p><strong><a name="step4_7_1" class="ancla">GSR sensor features</a></strong></p>
<p>Skin conductance, also known as galvanic skin response (GSR) is a method of measuring the electrical conductance of the skin, which varies with its moisture level. This is of interest because the sweat glands are controlled by the sympathetic nervous system, so moments of strong emotion,  change  the electrical resistance of the skin. Skin conductance is used as an indication of psychological or physiological arousal, The <a href="http://www.cooking-hacks.com/index.php/galvanic-skin-response-sensor-gsr-sweating-ehealth-medical.html">Galvanic Skin Response Sensor (GSR - Sweating)</a> measures the electrical conductance between 2 points, and is essentially a type of ohmmeter.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="velcro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/velcro.png" style="width: auto !important; height: auto !important; float: left;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/velcro.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="gsr" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/gsr.png" style="width: auto !important; height: auto !important; float: right;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/gsr.png"></div>
<p style="clear: both;">In skin conductance response method, conductivity of skin is measured at fingers of the palm.  The principle or theory behind functioning of galvanic response sensor is to measure electrical skin resistance based on sweat produced by the body. When high level of sweating takes place, the electrical skin resistance drops down. A dryer skin records much higher resistance. The skin conductance response sensor measures the psycho galvanic reflex of the body. Emotions such as excitement, stress, shock, etc. can result in the fluctuation of skin conductivity. Skin conductance measurement is one component of polygraph devices and is used in scientific research of emotional or physiological arousal.</p>
<p><strong><a name="step4_7_2" class="ancla">Sensor Calibration</a></strong></p>
<p>The precision of the sensor is enough in most applications. But you can improve this precision by a calibration process.</p>
<p>When using temperature sensor, you are actually measuring a voltage, and relating that to what the operating temperature of the sensor must be. If you can avoid errors in the voltage measurements, and represent the relationship between voltage and temperature more accurately, you can get better temperature readings.</p>
<p>Calibration is a process of measuring real voltage values. In the eHealth.cpp file we can find getSkinConductance and getSkinResistance functions. The value 0.5 is imprecisely defined by default.</p>
<p>If you measure this voltage value with a multimeter and modify the library will obtain greater accuracy.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="Resistance" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Resistance.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Resistance.png"></div>
<p>Place multimeter ends between 0.5V (Red cable) and GND (Black cable). In this case we would modify 0.5 to 0.498.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="e-Health_button4-01" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/4_det.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/4_det.png"></div>
<p><strong><a name="step4_7_3" class="ancla">Connecting the sensor</a></strong></p>
<p>Connect the to wires in the GSR contacts. The contacts have not polarization.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="4_det" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/velcros_conectando_e_health.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/velcros_conectando_e_health.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="e_health_velcros" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e_health_velcros.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e_health_velcros.png"></div>
<p>The galvanic skin sensor has two contacts and it works like a ohmmeter measuring the resistance of the materials. Place your fingers in the metallic contacts  and tighten the velcro as shown in the image below.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="dedo_velcro1" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/dedo_velcro1.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/dedo_velcro1.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="dedo_velcro2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/dedo_velcro2.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/dedo_velcro2.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="dedo_velcro3" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/dedo_velcro3.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/dedo_velcro3.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="dedo_velcro4" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/dedo_velcro4.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/dedo_velcro4.png"></div>
<p><strong><a name="step4_7_4" class="ancla">Library functions</a></strong></p>
<p><strong>Getting data</strong></p>
<p>With this simple functions we can read the value of the sensor. The library returns the value of the skin resistance and the skin conductance.</p>
<p><strong>Example:</strong></p>
<pre>{
	float conductance = eHealth.getSkinConductance();
	float resistance = eHealth.getSkinResistance();
 	float conductanceVol = eHealth.getSkinConductanceVoltage();
}
</pre>
<p><strong><a name="step4_7_5" class="ancla">Example</a></strong></p>
<p>Upload the next code for seeing data in the serial monitor:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">
/*
  *  eHelath board from Libelium for Arduino.
  *  Explanation : 
  *
  *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
  *  http://www.libelium.com
  *
  *  This program is free software: you can redistribute it and/or modify
  *  it under the terms of the GNU General Public License as published by
  *  the Free Software Foundation, either version 3 of the License, or
  *  (at your option) any later version.
  *
  *  This program is distributed in the hope that it will be useful,
  *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
  *  along with this program.  If not, see .
  *
  *  Version 0.1
  *  Author: Ahmad Saad &amp; Luis Martin
  */

#include &lt; eHealth.h &gt; 

// the setup routine runs once when you press reset:
void setup() {                
  Serial.begin(115200);  
}

// the loop routine runs over and over again forever:
void loop() {
  
 float conductance = eHealth.getSkinConductance();
 float resistance = eHealth.getSkinResistance();
 float conductanceVol = eHealth.getSkinConductanceVoltage();

 if (conductance == -1) {
   Serial.println(" No patient connection");
 } else {

         Serial.print("Conductance : ");       
         Serial.print(conductance, 2);  
         Serial.println("");         
 
         Serial.print("Resistance : ");       
         Serial.print(resistance, 2);  
         Serial.println("");    
         
         Serial.print("Conductance Voltage : ");       
         Serial.print(conductanceVol, 4);  
         Serial.println("");
         
         Serial.print("\n");
 }
       
    // wait for a second  
    delay(1000);            
}


</pre>
</div>
<p>Upload the code to Arduino and watch the Serial monitor.</p>
<p>Here is the USB output using the Arduino IDE serial port terminal:</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="Ejemplo_GSR_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Ejemplo_GSR_.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Ejemplo_GSR_.png"></div>
<p><strong>Raspberry Pi</strong></p>
<p>Compile the following code example:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">//Include eHealth library
#include "eHealth.h"

//Needed for eHealth
eHealthClass eHealth;

extern SerialPi Serial;

void setup() { 
	 
}

void loop() { 
	
  float conductance = eHealth.getSkinConductance();
  float resistance = eHealth.getSkinResistance();
  float conductanceVol = eHealth.getSkinConductanceVoltage();

  printf("Conductance : %f \n", conductance);    
  printf("Resistance : %f \n", resistance);  
  printf("Conductance Voltage : %f \n", conductanceVol);       

  printf("\n");

  // wait for a second  
  delay(1000);   
}

int main (){
	setup();
	while(1){
		loop();
	}
	return (0);
}

</pre>
</div>
<p><strong>Mobile App</strong></p>
<p>The App shows the information the nodes are sending which contains  the sensor data gathered. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_5">Smartphone app</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="android_6" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/android_6.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/android_6.png"></div>
<p><strong>GLCD</strong></p>
<p>The GLCD shows the information the nodes are sending which contains the sensor data gathered. <a href="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications].htm">GLCD</a></p>
<div style="margin: auto; text-align: center;"><img border="0" alt="GLCD" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla1.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla1.png"></div>
<p><strong>KST</strong></p>
<p>&nbsp;</p>
<p>KST program shows the ECG wave. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_3"></a></p>
<p>&nbsp;</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="Pantallazo-2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-2.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Pantallazo-2.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="Pantallazo2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo2.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Pantallazo2.png"></div>
<p><a href="http://www.cooking-hacks.com/index.php/galvanic-skin-response-sensor-gsr-sweating-ehealth-medical.html">Get the Galvanic Skin Response Sensor (GSR - Sweating)</a></p>
<h4><a name="step4_8" class="ancla">Glucometer</a></h4>
<p><strong><a name="step4_8_1" class="ancla">Glucometer sensor features</a></strong></p>
<p>Glucometer is a medical device for determining the approximate concentration of glucose in the blood. A small drop of blood, obtained by pricking the skin with a lancet, is placed on a disposable test strip that the meter reads and uses to calculate the blood glucose level. The meter then displays the level in mg/dl or mmol/l.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="presentacion_glucometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/presentacion_glucometro.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/presentacion_glucometro.png"></div>
<p>Despite widely variable intervals between meals or the occasional consumption of meals with a substantial carbohydrate load, human blood glucose levels tend to remain within the normal range. However, shortly after eating, the blood glucose level may rise, in non-diabetics, temporarily up to 7.8 mmol/L (140 mg/dL) or a bit more.</p>
<p><strong><a name="step4_8_2" class="ancla">Connecting the sensor</a></strong></p>
<p>Before start using the <a href="http://www.cooking-hacks.com/index.php/glucometer-sensor-ehealth-medical.html">glucometer</a> we need one measure at least in the memory of the glucometer. After that we can get all the information contained in the glucometer( date, glucose value).</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="elementos_pulsometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/montando_glucometro.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/montando_glucometro.png"></div>
<p>Turn on the glucometer and place a test strip in the machine when the machine is ready. Watch the indicator for placing the blood to the strip.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="glucometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/glucometro.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/glucometro.png"></div>
<p>Clean the end of your index finger with rubbing alcohol before pricking it with an sterile needle or lancet.</p>
<div class="notas_fondo" style="margin-top: 20px;">
<p><span class="content" style="text-decoration: underline;">NOTE:</span> The needles or lancets are not provided.</p>
</div>
<div style="margin: auto; text-align: center;"><img border="0" alt="pinchando_dedo" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pinchando_dedo.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pinchando_dedo.png"></div>
<p>Pierce your finger tip on the soft, fleshy pad and obtain a drop of blood. The type of drop of blood is determined by the type of strip you are using</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="dedo_sangre" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/dedo_sangre.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/dedo_sangre.png"></div>
<p>Place the drop of blood on or at the side of the strip.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="prueba_glucosa1" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/prueba_glucosa1.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/prueba_glucosa1.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="prueba_glucosa" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/prueba_glucosa.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/prueba_glucosa.png"></div>
<p>The glucometer will take a few moments to calculate the blood sugar reading.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="medida_glucosa" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/medida_glucosa.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/medida_glucosa.png"></div>
<p>The glucometer will store the value in the memory.</p>
<p>In order to extract the data from the glucometer to the Arduino or Raspberry Pi, connect the cable as show in the picture.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="conectando_lector_azul" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/conectando_lector_azul.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/conectando_lector_azul.png"></div>
<p>You should view in the glucometer screen the message “P-C”, that indicates the correct connection.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="elementos_pulsometro" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e_health+lector_azul.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e_health+lector_azul.png"></div>
<p><strong><a name="step4_8_3" class="ancla">Library functions</a></strong></p>
<p><strong>Getting data</strong></p>
<p>With a simple function we can read all the measures stored in the glucometer and show them in the terminal. The function must be used before the intilizazion of the serial monitor.</p>
<p><strong>Example of use:</strong></p>
<pre>{
	eHealth.readGlucometer();
	Serial.begin(115200);
}
</pre>
<p>The amount of data read is accessible with a another public function.</p>
<p><strong>Example of use:</strong></p>
<pre>{
	uint8_t numberOfData eHealthClass.getGlucometerLength()
}
</pre>
<p>The maximum number of measures is 32. The vector where data is a public variable of the e-Health class.</p>
<p><strong>Example of use:</strong></p>
<pre>{
    Serial.print(F("Glucose value : ")); 
    Serial.print(eHealth.glucoseDataVector[i].glucose);
    Serial.println(F(" mg/dL"));
}
</pre>
<p><strong><a name="step4_8_4" class="ancla">Example</a></strong></p>
<p><strong>Arduino</strong></p>
<p>Upload the next code for seeing data in the serial monitor:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)." 
 *  
 *  In this example we are going to get data stored in the glucometer 
 *  memory and show the result in the serial monitor.   
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see  .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad
 */


#include &lt; eHealth.h &gt;

void setup() { 

  eHealth.readGlucometer();
  Serial.begin(115200);
  delay(100);    
}

void loop() { 

  uint8_t numberOfData = eHealth.getGlucometerLength();   
  Serial.print(F("Number of measures : "));    
  Serial.println(numberOfData, DEC);   
  delay(100);


  for (int i = 0; i &lt; numberOfData; i++) { 
    // The protocol sends data in this order 
    Serial.println(F("=========================================="));

    Serial.print(F("Measure number "));
    Serial.println(i + 1);

    Serial.print(F("Date -&gt; ")); 
    Serial.print(eHealth.glucoseDataVector[i].day); 
    Serial.print(F(" of ")); 
    Serial.print(eHealth.numberToMonth(eHealth.glucoseDataVector[i].month));
    Serial.print(F(" of "));
    Serial.print(2000 + eHealth.glucoseDataVector[i].year);    
    Serial.print(F(" at "));

    if (eHealth.glucoseDataVector[i].hour &lt; 10) {
      Serial.print(0); // Only for best representation.
    }

    Serial.print(eHealth.glucoseDataVector[i].hour);
    Serial.print(F(":"));

    if (eHealth.glucoseDataVector[i].minutes &lt; 10) {
      Serial.print(0);// Only for best representation.
    }
    Serial.print(eHealth.glucoseDataVector[i].minutes);

    if (eHealth.glucoseDataVector[i].meridian == 0xBB)
      Serial.println(F(" pm"));
    else if (eHealth.glucoseDataVector[i].meridian == 0xAA)
      Serial.println(F(" am")); 

    Serial.print(F("Glucose value : ")); 
    Serial.print(eHealth.glucoseDataVector[i].glucose);
    Serial.println(F(" mg/dL"));
  }

  delay(20000);
}
			</pre>
</div>
<p>Upload the code and watch the Serial monitor.Here is the USB output using the Arduino IDE serial port terminal:</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="Ejemplo_glucometro_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Ejemplo_glucometro_.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/Ejemplo_glucometro_.png"></div>
<p><strong>Raspberry Pi</strong></p>
<p>Compile the following code:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">//Include eHealth library
#include "eHealth.h"

//Needed for eHealth
eHealthClass eHealth;


/*********************************************************
 *  IF YOUR ARDUINO CODE HAS OTHER FUNCTIONS APART FROM  *
 *  setup() AND loop() YOU MUST DECLARE THEM HERE        *
 * *******************************************************/

void setup() { 

  eHealth.readGlucometer();
  delay(100);    
}

void loop() { 

  uint8_t numberOfData = eHealth.getGlucometerLength();   
  printf("Number of measures : %d\n",numberOfData);       
  delay(100);


  for (int i = 0; i&lt; numberOfData; i++) { 
    // The protocol sends data in this order 
    printf("==========================================\n");

    printf("Measure number %d\n",i+1);

    printf("Date -&gt; %d",eHealth.glucoseDataVector[i].day); 
    printf(" of "); 
    printf("%d",eHealth.numberToMonth(eHealth.glucoseDataVector[i].month));
    printf(" of ");
    printf("%d",2000 + eHealth.glucoseDataVector[i].year);    
    printf(" at ");

    if (eHealth.glucoseDataVector[i].hour &lt; 10) {
      printf("0"); // Only for best representation.
    }

    printf("%d",eHealth.glucoseDataVector[i].hour);
    printf(":");

    if (eHealth.glucoseDataVector[i].minutes &lt; 10) {
      printf("0");// Only for best representation.
    }
    printf("%d",eHealth.glucoseDataVector[i].minutes);

    if (eHealth.glucoseDataVector[i].meridian == 0xBB)
      printf(" pm");
    else if (eHealth.glucoseDataVector[i].meridian == 0xAA)
      printf(" am"); 

    printf("Glucose value : %d mg/dL",eHealth.glucoseDataVector[i].glucose); 
  }

  delay(20000);
}

int main (){
	setup();
	while(1){
		loop();
	}
	return (0);
}
	</pre>
</div>
<p><a href="http://www.cooking-hacks.com/index.php/glucometer-sensor-ehealth-medical.html">Get the Glucometer Sensor</a></p>
<div style="float: right;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#index" class="top_link"><img border="0" alt="up" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arrow_up.png" style="width: auto !important; height: auto !important; border: none; vertical-align: text-bottom; margin: 0;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/arrow_up.png"><span style="margin-left: 5px; color: #87888a;">Go to index</span></a></div>
<div style="clear: both;">&nbsp;</div>
<!-- STEP 5 -->
<h2><a name="step5" class="ancla">5. Visualizing the data.</a></h2>
<h4><a name="step5_1" class="ancla">GLCD</a></h4>
<p>The e-Health library includes functions to manage a graphic LCD for visualizing data. The Serial <a href="http://www.cooking-hacks.com/index.php/serial-graphic-lcd-128x64.html">Graphic LCD</a> backpack is soldered to the 128x64 pixel Graphic LCD and provides the user a simple serial interface.</p>
<p>Features:</p>
<p class="ancla">Connecting the GLCD</p>
<p>You need to connect the device with the signals in the correct position. The red wire that powers the module shows how to connect it.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="e_health+pantalla" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e_health+pantalla.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e_health+pantalla.png"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="pantalla2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla2.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla2.png"></div>
The sensor measures are distributed in three screens that change by pressing the button.
<div style="margin: auto; text-align: center;"><img border="0" alt="e-Health_button-01" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e-Health_button-01.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/e-Health_button-01.png"></div>
In the first screen we can see some values like temperature, pulse or oxygen.
<div style="margin: auto; text-align: center;"><img border="0" alt="pantalla1b" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla1.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla1.png"></div>
In the second screen is used for presenting the air flow wave.
<div style="margin: auto; text-align: center;"><img border="0" alt="pantalla4" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla4.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla4.png"></div>
When no respiration is detected, the screen will advise of a risq of apnea.
<div style="margin: auto; text-align: center;"><img border="0" alt="pantalla3" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla3.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla3.png"></div>
The last screen draws the ECG wave.
<div style="margin: auto; text-align: center;"><img border="0" alt="pantalla5" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/pantalla5.png" style="width: auto !important; height: auto !important;" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/pantalla5.png"></div>
<p>After the third screen, if you push the button again you will return to the first screen.</p>
<p class="ancla">GLCD Library</p>
<p>The eHealth library includes all the necessary functions to manage the LCD and show in real time the data sensor measures. In order to use this functions, before all, you should include the corresponding library.</p>
<p>&nbsp;</p>
<pre>#include &lt; eHealthDisplay.h &gt;</pre>
<p>&nbsp;</p>
<p><strong>Library functions:</strong></p>
<p><strong>Initializing the LCD</strong></p>
<p>Use the init function in the setup before start using the LCD.</p>
<p>&nbsp;</p>
<p>Example</p>
<p>&nbsp;</p>
<pre>		{
			eHealthDisplay.init();
		}
</pre>
<p>&nbsp;</p>
<p><strong>Values Screen: </strong></p>
<p>In this screen you can see some numerical parameters like pulse, oxygen , temperature, amd a representation of the current body position.</p>
<p>Initializing</p>
<p>This screen must be initialized with the next function:</p>
<p>Example:</p>
<pre>		{
			eHealthDisplay.initValuesScreen();
		}
</pre>
<p>Getting data</p>
<p>To refresh the values in the LCD execute the next function.</p>
<p>Example</p>
<pre>		{
			eHealthDisplay.printValuesScreen();
		}
</pre>
<p>AirFlow screen:</p>
<p>In this screen we could see the air flow (breathing) wave and the number of breathings per minute. This screen includes an apnea adviser when no breathing is detected.</p>
<p>Initializing</p>
<p>This screen must be initialized with the next function:</p>
<p>&nbsp;</p>
Example:
<p>&nbsp;</p>
<pre>		{
			eHealthDisplay.initAirFlowScreen();
		}
</pre>
<p>Getting data</p>
<p>To refresh the values in the LCD execute the next function.</p>
<p>Example</p>
<pre>		{
			eHealthDisplay.printAirFlowScreen();
		}
</pre>
<p>ECGScreen:</p>
<p>This screen draws the electrocardiogram wave and measures the heart beat rate.</p>
<p>Initializing</p>
<p>This screen must be initialized with the next function:</p>
<p>Example:</p>
<pre>		{
			eHealthDisplay.initECGScreen();
		}
</pre>
<p>Getting data</p>
<p>To refresh the values in the LCD execute the next function.</p>
<p>&nbsp;</p>
Example
<p>&nbsp;</p>
<pre>		{
			eHealthDisplay.printECGScreen();
		}
</pre>
<p>The push button:</p>
<p>The eHealth board icludes an integrated push button to change between the screen or it can be used lika a general purpuose button for any application. The push button is routed to the digital pin 4.</p>
<p class="ancla">Example</p>
<p><strong>Arduino</strong></p>
<p>Upload the next code for seeing data in the GLCD:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)."  
 *
 *  In this example we can view all data measures in the LCD, choosing
 *  between 3 screens by a push button integrated in the eHealth board. 
 * 
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad 
 */

#include &lt; PinChangeInt.h &gt;
#include &lt; eHealth.h &gt;

#define pushButton 4

uint8_t screenNumber = 1; 
uint8_t buttonState;
uint8_t cont = 0;

void setup() {
  Serial.begin(115200);
  delay(100); 

  //Configure and initializes the LCD.
  eHealthDisplay.init(); 
  delay(100); 
}


void loop() {

  //Screen number one with the numerical sensor values and body position 
  //=========================================================================

  eHealthDisplay.initValuesScreen();
  delay(100);

  //Attach the inttruptions for using the pulsioximeter     

  PCintPort::attachInterrupt(6, readPulsioximeter, RISING);

  while(screenNumber == 1) {
    //It prints data sensor measures in the LCD.
    buttonState = digitalRead(pushButton);
    delay(10);

    if(buttonState == 1) {
      screenNumber++;
    }

    eHealthDisplay.printValuesScreen();
  }

  PCintPort::detachInterrupt(6);


  //Screen number two wich represent the air flow wave 
  //=========================================================================

  eHealthDisplay.initAirFlowScreen();	

  while( screenNumber == 2) {
    buttonState = digitalRead(pushButton);    
    delay(10);

    if(buttonState==1){
      screenNumber++;
    }

    eHealthDisplay.printAirFlowScreen();      
  }

  //Screen number three wich represent the ECG wave 
  //=========================================================================

  eHealthDisplay.initECGScreen();	

  while( screenNumber == 3) {
    buttonState = digitalRead(pushButton);    
    delay(10);

    if(buttonState==1){
      screenNumber++;
    }

    eHealthDisplay.printECGScreen();
  }

  screenNumber = 1;
  delay(10);  
}

//Include always this function for using the pulsioximeter sensor
//=========================================================================
void readPulsioximeter() {  

  cont ++;

  if (cont == 50) {
    //Get only one 50 measures to reduce the latency
    eHealth.readPulsioximeter();  
    cont = 0;
  }
}

	</pre>
</div>
<p>The GLCD shows the information the nodes are sending which contains the sensor data gathered.</p>
<h4><a name="step5_3" class="ancla">KST: Real-time data viewing and plotting</a></h4>
<p>KST is the fastest real-time large-dataset viewing and plotting tool available (you may be interested in some benchmarks) and has built-in data analysis functionality. It is very user-friendly and contains many powerful built-in features and is expandable with plugins and extensions.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="3-pics" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/3-pics.png" style="width: auto !important; height: auto !important;"></div>
<p>KST is licensed under the GPL, and is as such freely available for anyone. What's more, as of 2.0.x it is available on all of the following platforms: Microsoft Windows, Linux, Mac OSX.</p>
<p>Before all, you have to install the KST program in your PC. You can downloaded the program from  KST web page:</p>
<p><a href="http://kst-plot.kde.org/">http://kst-plot.kde.org/</a></p>
<p>We are going to use KST for representing the ECG wave, airFlow and galvanic skin response.</p>
<p><strong><a name="step5_3_1" class="ancla">Example code</a></strong></p>
<p>This example is for Linux OS. It will represent different waves and data measured by e-Health sensor platform.</p>
<p>You can find more information about how to use KST on this <a href="http://www.youtube.com/watch?feature=player_embedded&v=FgwOgb73lrE#!">video tutorial</a>.</p>
<p>To begin working with our real-time data must first load the appropriate code in the Arduino.</p>
<p>As we will work with Linux we will use the console to save data to a file (.txt).</p>
<p>Plug in the device, and execute</p>
<pre>		stty -F /dev/ttyACM0 cs8 9600 ignbrk -brkint -icrnl -imaxbel -opost -onlcr -isig -icanon 
		-iexten -echo -echoe -echok -echoctl -echoke noflsh -ixon -crtscts 
		</pre>
<div style="margin: auto; text-align: center;"><img border="0" alt="14_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/14_.png" style="width: auto !important; height: auto !important;"></div>
<p>in console "A".</p>
<p>With this command we will configure the port  ttyACM0.</p>
<p>Next, we use the command on the same console to create the text file where data will be stored.</p>
<pre>		tail -f /dev/ttyACM0 &gt; Desktop/test.txt
	</pre>
<div style="margin: auto; text-align: center;"><img border="0" alt="456_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/456_.png" style="width: auto !important; height: auto !important;"></div>
<p>The Arduino KST sample programs are ready to send data continuously when it receives a "C" and stop sending when it receive an "F". These data will be sent by console "B" with commands:</p>
<pre>		echo 'C' &gt; /dev/ttyACM0
		echo 'F' &gt; /dev/ttyACM0
		</pre>
<div style="margin: auto; text-align: center;"><img border="0" alt="546_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/546_.png" style="width: auto !important; height: auto !important;"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="7887_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/7887_.png" style="width: auto !important; height: auto !important;"></div>
<p><strong>Basic configuration</strong></p>
<p>Now with the file created and updated with data received, we have to open the program KST.</p>
<p>To configure KST for each example, we will need to set common parameters.</p>
<div style="float: left; width: 300px;">
<div style="height: 30px;">1) In pop-up window select the directory where the .txt previously created and press the Configure button.</div>
<a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo_1000px.png" id="single_image"> <img border="0" alt="Pantallazo_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo_300px.png" style="width: auto !important; height: auto !important;"> </a></div>
<div style="float: right; width: 300px;">
<div style="height: 30px;">2) The next step, is to configure the data source.</div>
<a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-1_1000px.png" id="single_image"> <img border="0" alt="Pantallazo-1_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-1_300px.png" style="width: auto !important; height: auto !important; float: right;"> </a></div>
<div style="float: left; width: 300px;">
<div style="height: 30px;">3) Select the measurement data. The data is field/column 2.</div>
<a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-2_1000px.png" id="single_image"> <img border="0" alt="Pantallazo_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-2_300px.png" style="width: auto !important; height: auto !important;"> </a></div>
<div style="float: right; width: 300px;">
<div style="height: 30px;">&nbsp;</div>
<a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-3_1000px.png" id="single_image"> <img border="0" alt="Pantallazo-1_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-3_300px.png" style="width: auto !important; height: auto !important; float: right;"> </a></div>
<div style="clear: both;">&nbsp;</div>
<p>The final step is different depending on each example.</p>
<p><strong><a name="step5_3_1" class="ancla">ECG example in KST</a></strong></p>
<p>In this example we configure the KST to show a defined period of x time (x=300). We are interested only in the most current values of the ECG.</p>
<a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-5_1000px.png" id="single_image"> <img border="0" alt="Pantallazo-5_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-5_300px.png" style="width: auto !important; height: auto !important; float: left;"> </a> <a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-6_1000px.png" id="single_image"> <img border="0" alt="Pantallazo-6_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-6_300px.png" style="width: auto !important; height: auto !important; float: right;"> </a>
<div style="margin: auto; text-align: center;"><img border="0" alt="ecg_measure" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/ecg_measure.png" style="width: auto !important; height: auto !important;"></div>
<p>The Arduino code used in this program is presented next:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)." 
 *
 *  In this example we read the value of the ECG sensor and print the
 *  ECG wave form using KST.
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad 
 */


#include &lt; eHealth.h &gt;

extern volatile unsigned long timer0_overflow_count;
float fanalog0;
int analog0;
unsigned long time;


byte serialByte;
void setup() {
  Serial.begin(9600);
  Serial.println("Starting...");
}

void loop() { 
  while (Serial.available()&gt;0){  
    serialByte=Serial.read();
    if (serialByte=='C'){        
      while(1){
        fanalog0=eHealth.getECG();  
        // Use the timer0 =&gt; 1 tick every 4 us
        time=(timer0_overflow_count &lt;&lt; 8) + TCNT0;        
        // Microseconds conversion.
        time=(time*4);   
        //Print in a file for simulation
        Serial.print(time);
        Serial.print(";");
        Serial.println(fanalog0,5);

        if (Serial.available()&gt;0){
          serialByte=Serial.read();
          if (serialByte=='F')  break;
        }
      }
    }
  }
}

			</pre>
</div>
<p><strong><a name="step5_3_2" class="ancla">Galvanic Skin Response example in KST</a></strong></p>
<p>In the Galvanic Skin Response example we are interested in all the data from the start of measurement. We will configure the KST to show a wave with all data.</p>
<a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-4_1000px.png" id="single_image"> <img border="0" alt="Pantallazo-4_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-4_300px.png" style="width: auto !important; height: auto !important; float: right;"> </a> <a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-6_1000px.png" id="single_image"> <img border="0" alt="Pantallazo-6_" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-6_300px.png" style="width: auto !important; height: auto !important; float: left;"> </a>
<div style="margin: auto; text-align: center;"><img border="0" alt="Pantallazo-2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo-2.png" style="width: auto !important; height: auto !important;"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="Pantallazo2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/Pantallazo2.png" style="width: auto !important; height: auto !important;"></div>

<p><strong><a name="step5_3_3" class="ancla">AirFlow example</a></strong></p>

We can configure the program according to the data we want to sample.

  <div style="margin: auto; text-align: center;"><img border="0" alt="Pantallazo2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/breathing_measure.png" style="width: auto !important; height: auto !important;"></div>



<h4><a name="step5_4" class="ancla">Serial Console</a></h4>

<p>All data can be visualized in the serial monitor of Arduino/RasberryPi by using the next serial console program.</p>

<p>Load the example eHealth_SerialMenu program and open the serial monitor of Arduino IDE. </p>


<p>In the main menu we can find all e-Health sensors. By sending a command to the serial port  we can select one of them.</p>

 <div style="margin: auto; text-align: center;"><img border="0" alt="Pantallazo2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/MainMenu.png" style="width: auto !important; height: auto !important;"></div>


<p>
To view the sensor measures, send the corresponding command and press enter key.<br>
You can return to the main menu by sending the command “B”.
</p>

 <div style="margin: auto; text-align: center;"><img border="0" alt="Pantallazo2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/ExitCommand.png" style="width: auto !important; height: auto !important;">
 </div>

 <div class="notas_fondo" style="margin-top: 20px;">
<p><span class="content" style="text-decoration: underline;">NOTE:</span>The measurement of glucose has not been implemented in this example because both processes use UART communication and can cause malfunction</p>
</div>


<p>The Arduino code used in this program is presented next:</p>

<div class="codigo" style="width:690px;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre style="overflow:auto;" class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)." 
 *
 *  In this example we have used the serial monitor like a programed
 *  console where we can choose the sensor we want to view.  *   
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see &lt; http://www.gnu.org/licenses/ &gt;.
 *
 *  Version 0.1
 *  Author: Ahmad Saad &amp; Luis Martín 
 */


#include &lt; eHealth.h &gt;
#include &lt; PinChangeInt.h &gt;


char serialByte;
uint8_t state = 0;
uint8_t cont = 0;

float parameter = 0.0;

    void setup() 
    {
      Serial.begin(115200);
      initScreen();
      delay(100);
    }
    
    void loop() 
    {      
      state = 0;
   
       while (Serial.available()&gt;0){  
        serialByte=Serial.read();
        
          if ((serialByte=='A') || (serialByte == 'a')){ //Airflow sensor  
            airFlowMenu();
            airFlowBucle();

          } else if ((serialByte=='S') || (serialByte == 's')){
            skinSensorMenu();
            skinSensorBucle();
            
          } else if ((serialByte=='E') || (serialByte == 'e')){
            ECGMenu();
            ECGBucle();
            
          } else if ((serialByte=='P') || (serialByte == 'p')){
            pulsioximeterMenu();
            pulsioximeterBucle();
            
          } else if ((serialByte=='B') || (serialByte == 'b')){
            bodyPositionMenu();
            bodyPositionBucle();
            
          } else if ((serialByte=='T') || (serialByte == 't')){
            temperatureMenu();
            temperatureBucle();
            
          } else if ((serialByte=='N') || (serialByte == 'n')){
            BloodPressureMenu();
            BloodPressureBucle();             
          }  
       }        
    }
    
//=================================================================================================================
//=================================================================================================================
    void initScreen(void) 
    {  
      printLogoEhealth(); 
      delay(100); 
      mainMenu();
    }
//=================================================================================================================
//=================================================================================================================    
    void mainMenu(void) 
    {
       lineFeed();  Serial.print(F("  --------&gt; EHEALTH MENU OPTIONS &lt;--------"));  lineFeed();  lineFeed();
           
       initialSpace();   Serial.print(F("A : AirFlow sensor options"));       lineFeed(); 
       initialSpace();   Serial.print(F("S : Skin sensor options"));          lineFeed(); 
       initialSpace();   Serial.print(F("E : ECG sensor options"));           lineFeed(); 
       initialSpace();   Serial.print(F("P : Pulsioximeter sensor options")); lineFeed(); 
       initialSpace();   Serial.print(F("B : Body position sensor options")); lineFeed(); 
       initialSpace();   Serial.print(F("T : Temperature sensor options"));   lineFeed();     
       initialSpace();   Serial.print(F("N : Blood Pressure sensor options"));lineFeed(); 
    } 
//=================================================================================================================
//=================================================================================================================
    void airFlowMenu(void)  
    {  
      lineFeed();      Serial.print(F("--------&gt; AIRFLOW MENU OPTIONS &lt;--------"));  lineFeed();  lineFeed(); 
      initialSpace();  Serial.print(F("W : Wave form"));  lineFeed();
      initialSpace();  Serial.print(F("V : Analogic value"));  lineFeed();  
      initialSpace();  Serial.print(F("B : BACK MAIN MENU"));  lineFeed();  
    }  
//=================================================================================================================
//=================================================================================================================   
    void airFlowBucle(void) {      
      while (state == 0) {
        while (Serial.available()&gt;0){  
          serialByte=Serial.read();        
             if ((serialByte=='W') || (serialByte == 'w')){ //Airflow sensor 
                while(1){                
                  serialByte=Serial.read();                     
                  eHealth.airFlowWave(eHealth.getAirFlow());
                     
                  if ((serialByte== 'B') || (serialByte == 'b')) {
                    airFlowMenu();                         
                    break;   
                  }               
                }            
              } else if ((serialByte=='V') || (serialByte == 'v')){
                  while(1){                
                    serialByte=Serial.read();                     
                    Serial.print(F(" Airflow analogic value : "));
                    Serial.println(eHealth.getAirFlow());
                    delay(20);                     
                       if ((serialByte== 'B') || (serialByte == 'b')) {
                         airFlowMenu();                         
                         break;   
                       }
                  }                 
              } else if ((serialByte=='B') || (serialByte == 'b')){              
                state = 1; 
              } 
           }          
        }       
      mainMenu();  
    }
//=================================================================================================================
//=================================================================================================================    
    void skinSensorMenu(void)  
    {
      lineFeed();      Serial.print(F("--------&gt; SKIN SENSOR MENU OPTIONS &lt;--------"));  lineFeed();  lineFeed(); 
      outputMenu();      
    } 
//=================================================================================================================
//=================================================================================================================    
    void skinSensorBucle(void) {
      while (state == 0) {
          while (Serial.available()&gt;0){  
            serialByte=Serial.read();        
               if ((serialByte=='S') || (serialByte == 's')){  
                  while(1){ 
                    
                    lineFeed();
                    
                    serialByte=Serial.read();  
                    float conductance = eHealth.getSkinConductance();  
                    long resistance = eHealth.getSkinResistance();   
                    float conductanceVoltage = eHealth.getSkinConductanceVoltage();   

                     if (conductance == -1) {
                       Serial.println(" No patient connection");
                     } else {
                       
                       Serial.print(F(" Skin conductance value : "));
                       Serial.println(conductance);
                    
                       Serial.print(F(" Skin resistance value : "));
                       Serial.println(resistance);
                 
                       Serial.print(F(" Skin conductance value in volts: "));
                       Serial.println(conductanceVoltage);
                    
                       delay(500); 
                     }
                       
                    if ((serialByte== 'B') || (serialByte == 'b')) {
                      skinSensorMenu();                         
                      break;   
                    }               
                  } 

                    
                } else if ((serialByte=='B') || (serialByte == 'b')){              
                  state = 1; 
                } 
             }          
          }          
        mainMenu();   
    }  
//=================================================================================================================
//=================================================================================================================     
    void ECGMenu(void) {
      lineFeed();  Serial.print(F("--------&gt; ECG MENU OPTIONS &lt;--------"));  lineFeed();  lineFeed(); 
      outputMenu();     
    }
//=================================================================================================================
//=================================================================================================================    
    void ECGBucle(void) {
        while (state == 0) {
          while (Serial.available()&gt;0){  
            serialByte=Serial.read();        
               if ((serialByte=='S') || (serialByte == 's')){  
                  while(1){ 
                    
                    lineFeed();     
                    serialByte=Serial.read();  

                    float ECG = eHealth.getECG();
                  
                    Serial.print("ECG value :  ");
                    Serial.print(ECG, 2); 
                    Serial.print(" V"); 
                    Serial.println(""); 
                  
                    delay(1);  
                    
                    if ((serialByte== 'B') || (serialByte == 'b')) {
                      ECGMenu();                         
                      break;   
                    }               
                  }                    
                } else if ((serialByte=='B') || (serialByte == 'b')){              
                  state = 1; 
                } 
             }          
          }          
        mainMenu(); 
    }  
//=================================================================================================================
//=================================================================================================================    
    void pulsioximeterMenu(void)  
    {
      lineFeed();      Serial.print(F("--------&gt; PULSIOXIMETER MENU OPTIONS &lt;--------"));  lineFeed();  lineFeed(); 
      outputMenu();     
    }   
//=================================================================================================================
//=================================================================================================================      
    void pulsioximeterBucle(void)
    {
        //Attach the interruptions for using the pulsioximeter.
        PCintPort::attachInterrupt(6, readPulsioximeter, RISING);
        eHealth.initPulsioximeter();

        while (state == 0) {
          while (Serial.available()&gt;0){  
            serialByte=Serial.read();        
               if ((serialByte=='S') || (serialByte == 's')){  
                  while(1){ 
                    
                    //eHealth.readPulsioximeter();                   

                    lineFeed();                    
                    serialByte=Serial.read();  
                    Serial.print("PRbpm : "); 
                    Serial.print(eHealth.getOxygenSaturation());

                    Serial.print(" % SPo2 : ");
                    Serial.print(eHealth.getBPM());
  
                    Serial.print("\n");                    
                    delay(500); 
                       
                    if ((serialByte== 'B') || (serialByte == 'b')) {
                      pulsioximeterMenu();                         
                      break;   
                    }               
                  }                     
                } else if ((serialByte=='B') || (serialByte == 'b')){              
                  state = 1; 
                } 
             }          
          }          
        mainMenu();
        
        PCintPort::detachInterrupt(6);
    }  
//=================================================================================================================
//=================================================================================================================    
    void bodyPositionMenu(void)  
    {
      lineFeed();  Serial.print(F("--------&gt; BODY POSTITIONMENU OPTIONS &lt;--------"));  lineFeed();  lineFeed(); 
      outputMenu(); 
    } 
//=================================================================================================================
//=================================================================================================================     
    void bodyPositionBucle(void)
    {
       while (state == 0) {
          while (Serial.available()&gt;0){

            eHealth.initPositionSensor();
            serialByte=Serial.read();        
               if ((serialByte=='S') || (serialByte == 's')){  
                  while(1){ 
                    
                    lineFeed();     
                    serialByte=Serial.read();  
                    
                    Serial.print("Current position : ");
                    uint8_t position = eHealth.getBodyPosition(); 
                    eHealth.printPosition(position);
                    delay(100);                    
                       
                    if ((serialByte== 'B') || (serialByte == 'b')) {
                      bodyPositionMenu();                         
                      break;   
                    }               
                  }                    
                } else if ((serialByte=='B') || (serialByte == 'b')){              
                  state = 1; 
                } 
             }          
          }          
        mainMenu();
    }  
//=================================================================================================================
//=================================================================================================================    
    void temperatureMenu(void)  
    {
      lineFeed();  Serial.print(F("--------&gt; TEMPERATURE MENU OPTIONS &lt;--------"));  lineFeed();  lineFeed(); 
      outputMenu();
    }    
//=================================================================================================================
//=================================================================================================================    
    void temperatureBucle(void)
    {
          while (state == 0) {
          while (Serial.available()&gt;0){  
            serialByte=Serial.read();        
               if ((serialByte=='S') || (serialByte == 's')){  
                  while(1){ 
                    
                    lineFeed();     
                    serialByte=Serial.read();
                    
                    float temperature = eHealth.getTemperature();   
                    Serial.print("Temperature (ºC): ");       
                    Serial.println(temperature, 2);                    
                    
                    delay(1000); 
                       
                    if ((serialByte== 'B') || (serialByte == 'b')) {
                      temperatureMenu();                         
                      break;   
                    }               
                  }                    
                } else if ((serialByte=='B') || (serialByte == 'b')){              
                  state = 1; 
                } 
             }          
          }          
        mainMenu(); 
    }  
//=================================================================================================================
//=================================================================================================================    
    void BloodPressureMenu(void)  
    {
      lineFeed();  Serial.print(F("--------&gt; BLOOD PRESSURE MENU OPTIONS &lt;--------"));  lineFeed();  lineFeed(); 
      outputMenu();    
    }
//=================================================================================================================
//=================================================================================================================     

    void BloodPressureBucle()
    {
          while (state == 0) {
          while (Serial.available()&gt;0){  
            serialByte=Serial.read();        
               if ((serialByte=='S') || (serialByte == 's')){  
                  while(1){ 
                    
                    lineFeed();     
                    serialByte=Serial.read();  
                    Serial.println("Press On/Off button please...");

                    eHealth.initBloodPressureSensor(parameter); 
                    
                    Serial.println("****************************");
                    Serial.print("Systolic blood pressure value : ");
                    Serial.println(eHealth.getSystolicPressure());
                  
                    Serial.println("****************************");
                    Serial.print("Diastolic blood pressure value : ");
                    Serial.println(eHealth.getDiastolicPressure());
                    delay(3000); 
                       
                    if ((serialByte== 'B') || (serialByte == 'b')) {
                      BloodPressureMenu();                         
                      break;   
                    }               
                  }                    
                } else if ((serialByte=='B') || (serialByte == 'b')){              
                  state = 1; 
                } 
             }          
          }          
        mainMenu();
    }
    


//=================================================================================================================
//=================================================================================================================   
    void outputMenu(void) {
        initialSpace();  Serial.print(F("S : Serial output value"));  lineFeed();  
        initialSpace();  Serial.print(F("B : BACK MAIN MENU"));  lineFeed();   
    }

//=================================================================================================================
//=================================================================================================================
    void printLogoEhealth(void)  
    {  
      starLine();      
      starPrint();  blank();        HLeterOne();    blank();       blank();         blank();         tLeterOne();   hLeterOne();  starPrint();   lineFeed();    
      starPrint();  eLeterTwo();    HLeterTwo();    eLeterTwo();   aLeterTwo();     lLeterTwo();     tLeterTwo();   hLeterTwo();  starPrint();   lineFeed();
      starPrint();  eLeterThree();  HLeterThree();  eLeterThree(); aLeterThree();   lLeterThree();   tLeterThree(); hLeterThree();  starPrint();   lineFeed();
      starPrint();  eLeterFour();   HLeterFour();   eLeterFour();  aLeterFour();    lLeterFour();    tLeterFour();  hLeterFour();  starPrint();   lineFeed();
      starPrint();  eLeterFive();   HLeterFive();   eLeterFive();  aLeterFive();    lLeterFive();    tLeterFive();  hLeterFive();  starPrint();   lineFeed();
      starPrint();  eLeterSix();    HLeterSix();    eLeterSix();   aLeterSix();     lLeterSix();     tLeterSix();   hLeterSix();  starPrint();   lineFeed();
      starLine();
    }
//=================================================================================================================
//=================================================================================================================
    void eLeterTwo(void)   { Serial.print(F(" _____  "));  }
    void eLeterThree(void) { Serial.print(F("|  __ | "));  }  
    void eLeterFour(void)  { Serial.print(F("|  ___| "));  }  
    void eLeterFive(void)  { Serial.print(F("| |___  "));  }
    void eLeterSix(void)   { Serial.print(F("|_____| "));  }
    
    void HLeterOne(void)   { Serial.print(F(" _    _  ")); }
    void HLeterTwo(void)   { Serial.print(F("| |  | | ")); }
    void HLeterThree(void) { Serial.print(F("| |__| | ")); }  
    void HLeterFour(void)  { Serial.print(F("|  __  | ")); }  
    void HLeterFive(void)  { Serial.print(F("| |  | | ")); }
    void HLeterSix(void)   { Serial.print(F("|_|  |_| ")); }   

    
    void aLeterTwo(void)   { Serial.print(F(" ______  ")); }
    void aLeterThree(void) { Serial.print(F("|      | ")); }  
    void aLeterFour(void)  { Serial.print(F("|  {}  | ")); }  
    void aLeterFive(void)  { Serial.print(F("|  __  | ")); }
    void aLeterSix(void)   { Serial.print(F("|_|  |_| ")); }
    
    void lLeterTwo(void)   { Serial.print(F(" _      "));  }
    void lLeterThree(void) { Serial.print(F("| |     "));  }  
    void lLeterFour(void)  { Serial.print(F("| |     "));  }  
    void lLeterFive(void)  { Serial.print(F("| |____ "));  }
    void lLeterSix(void)   { Serial.print(F("|______|"));  }
    
    void tLeterOne(void)   { Serial.print(F("    _     "));}
    void tLeterTwo(void)   { Serial.print(F(" _| |__  ")); }
    void tLeterThree(void) { Serial.print(F("(_   __) ")); }  
    void tLeterFour(void)  { Serial.print(F("  | |    ")); }  
    void tLeterFive(void)  { Serial.print(F("  | |__  ")); }
    void tLeterSix(void)   { Serial.print(F("  |____) ")); }
    
    void hLeterOne(void)   { Serial.print(F(" _       "));}
    void hLeterTwo(void)   { Serial.print(F("| |      ")); }
    void hLeterThree(void) { Serial.print(F("| |___   ")); }  
    void hLeterFour(void)  { Serial.print(F("|  _  |  ")); }  
    void hLeterFive(void)  { Serial.print(F("| | | |  ")); }
    void hLeterSix(void)   { Serial.print(F("|_| |_|  ")); }

//=================================================================================================================
//=================================================================================================================  
    
    void blank(void)   { Serial.print(F("        "));}

//=================================================================================================================
//=================================================================================================================    
    void initialSpace(void)  
    {      
        Serial.print(F("        "));  
    }   
//=================================================================================================================
//=================================================================================================================    
    void starPrint(void)  
    {
      Serial.print(F("* ")); 
    }
//=================================================================================================================
//=================================================================================================================    
    void lineFeed(void)  
    {
      Serial.print(F("\n")); 
    }
//=================================================================================================================
//=================================================================================================================    
    void starLine(void)  
    {
      for (int i = 0; i &lt; 63; i++) 
      {
        Serial.print(F("*"));
      }      
      lineFeed();
    }        
//=================================================================================================================
//=================================================================================================================

int freeRam () {
  extern int __heap_start, *__brkval; 
  int v; 
  return (int) &amp;v - (__brkval == 0 ? (int) &amp;__heap_start : (int) __brkval); 
}

//=================================================================================================================
//=================================================================================================================

//Include always this code for using the pulsioximeter sensor
//=========================================================================
void readPulsioximeter(){  
  
  cont ++;
 
  if (cont == 30) { //Get only one of 25 measures to reduce the latency
    eHealth.readPulsioximeter();  
    cont = 0;
  }
}
</pre>
</div>

<h4><a name="step5_5" class="ancla">SmartPhone Application</a></h4>
<div style="margin: auto; text-align: center;"><img border="0" alt="ehealth_icon_op3" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/ehealth_icon_op3.png" style="width: auto !important; height: auto !important;"></div>
<p>The <a href="http://www.cooking-hacks.com/index.php/wifi-module-for-arduino-roving-rn-xvee-xbee-compatible.html">wifi module</a> may perform direct communications with iPhone and Android devices without the need of an intermediate router by creating an Adhoc network between them.</p>
<p>We have developed the application e-Health Sensor Plattform, for both iPhone and Android platforms. The application may be also downloaded from the official App markets or from the Libelium website for free: <a href="http://www.cooking-hacks.com/apps">http://www.cooking-hacks.com/apps</a></p>
<p>Official app markets URL’s:</p>
<div style="margin: auto; text-align: center;"><a href="https://itunes.apple.com/us/app/e-health-sensor-platform/id581953525"><img border="0" alt="ehealth_icon_op3" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/logo_appstore.png" style="width: 150px; height: auto !important;"></a> <a href="https://play.google.com/store/apps/details?id=com.libelium.ehealth"> <img border="0" alt="ehealth_icon_op3" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/logo_googleplay.png" style="width: 150px; height: auto !important;"> </a></div>
<p><strong><a name="step5_4_1" class="ancla">Connecting to an iPhone</a></strong></p>
<p><strong>Installation:</strong></p>
<p>a) Download the application from App Store:</p>
<p>b) Download the application (e-Health.ipa) from the Libelium website: http://www.libelium.com/apps</p>
<li>Then double click on the icon, or right click and open with iTunes.</li>
<li>Inside iTunes, on the left panel, click on DEVICES-&gt;Your Device.</li>
<li>Select on the top “Apps”, and select Sync Apps. Drag into the desired screen e-Health app.             
<ul>
<li>Respiratory rate chart </li>
<li>Electrocardiogram: is necessary to correctly set the delay between frames for the correct measurement of electrocardiogram</li>
</ul>
<ul>
<li>Temperature</li>
<li>Pulse</li>
<li>Oxygen</li>
<li>Conductivity</li>
<li>Resistance</li>
<li>Airflow</li>
</ul>
<ul>
<li>Systolic Pressure</li>
<li>Diastolic Pressure</li>
<li>Glucometer</li>
</ul>
<ul>
<li>From the Android device, go to Android Market.</li>
<li>Search “” or “” and press enter</li>
</ul>
<ul>
<li>Insert it to the SD card of your Android device.</li>
<li>Then explore the SD card in your Android device and install the application. You can explore the SD card with “Astro”, “ES Explora”, or “File Explorer” applications.</li>
</ul>
<ul>
<li>Respiratory rate chart </li>
<li>Electrocardiogram: is necessary to correctly set the delay between frames for the correct measurement of electrocardiogram</li>
</ul>
<ul>
<li>Temperature</li>
<li>Pulse</li>
<li>Oxygen</li>
<li>Conductivity</li>
<li>Resistance</li>
<li>Airflow</li>
</ul>
<ul>
<li>Systolic Pressure</li>
<li>Diastolic Pressure</li>
<li>Glucometer</li>
</ul>
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-shield-biometric-medical-arduino-raspberry-pi.html">e-Health Sensors Shield</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-complete-kit-biometric-medical-arduino-raspberry-pi.html">e-Health Sensor Platform Complete Kit</a></li>
</ul>
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/patient-position-sensor-accelerometer-ehealth-medical.html"> Patient Position Sensor (Accelerometer)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/glucometer-sensor-ehealth-medical.html"> Glucometer Sensor</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/body-temperature-sensor-ehealth-medical.html"> Body Temperature Sensor</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/blood-pressure-sensor-sphygmomanometer-ehealth-medical.html">Blood Pressure Sensor (Sphygmomanometer)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/pulse-and-oxygen-in-blood-sensor-spo2-ehealth-medical.html">Pulse and Oxygen in Blood Sensor (SPO2)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/airflow-sensor-breathing-ehealth-medical.html">Airflow Sensor (Breathing)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/galvanic-skin-response-sensor-gsr-sweating-ehealth-medical.html">Galvanic Skin Response Sensor (GSR - Sweating)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/electrocardiogram-sensor-ecg-ehealth-medical.html">Electrocardiogram Sensor (ECG)</a></li>
</ul>
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-shield-biometric-medical-arduino-raspberry-pi.html">e-Health Sensors Shield</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-complete-kit-biometric-medical-arduino-raspberry-pi.html">e-Health Sensor Platform Complete Kit</a></li>
</ul>
<ul>
<li><a href="http://www.cooking-hacks.com/index.php/patient-position-sensor-accelerometer-ehealth-medical.html"> Patient Position Sensor (Accelerometer)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/glucometer-sensor-ehealth-medical.html"> Glucometer Sensor</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/body-temperature-sensor-ehealth-medical.html"> Body Temperature Sensor</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/blood-pressure-sensor-sphygmomanometer-ehealth-medical.html">Blood Pressure Sensor (Sphygmomanometer)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/pulse-and-oxygen-in-blood-sensor-spo2-ehealth-medical.html">Pulse and Oxygen in Blood Sensor (SPO2)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/airflow-sensor-breathing-ehealth-medical.html">Airflow Sensor (Breathing)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/galvanic-skin-response-sensor-gsr-sweating-ehealth-medical.html">Galvanic Skin Response Sensor (GSR - Sweating)</a></li>
<li><a href="http://www.cooking-hacks.com/index.php/electrocardiogram-sensor-ecg-ehealth-medical.html">Electrocardiogram Sensor (ECG)</a></li>
</ul>
</li>
<p>Once installed, the app appears in your iPhone/iPod screen.</p>
<p><strong><a name="step5_4_2" class="ancla">iPhone app tutorial</a></strong></p>
<p>The use of the app is very simple, first you have to connect to one of the Arduino nodes selecting it in Settings-&gt;Wi-Fi, and then launch the application.</p>
<p>To connect to the network created by the <a href="http://www.cooking-hacks.com/index.php/wifi-module-for-arduino-roving-rn-xvee-xbee-compatible.html">wifi module</a> of Arduino: <strong>Go to Settings-&gt;Wi-Fi and select iPHONE_ADHOC</strong>.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="iphone_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/iphone_1.png" style="width: auto !important; height: auto !important;"></div>
<p>Once connected, you can launch the App.</p>
<div style="margin: auto; text-align: center;">
<div style="width: 550px; margin: auto; text-aling: center;"><img border="0" alt="iphone_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/iphone_2.png" style="width: auto !important; height: auto !important; float: left;"> <img border="0" alt="iphone_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/iphone_3.png" style="width: auto !important; height: auto !important; float: right;"></div>
</div>
<div style="clear: both;">&nbsp;</div>
<p>The App shows the information the nodes are sending which contains  the sensor data gathered.</p>
<p>The first tab “Charts” shows:</p>
<p>The “Current data” tab, shows data that is in continuous change:</p>
<div style="margin: auto; text-align: center; overflow: hidden;">
<div style="width: 550px; text-align: center; margin: auto;"><img border="0" alt="iphone_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/iphone_4.png" style="width: auto !important; height: auto !important; float: left;"> <img border="0" alt="iphone_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/iphone_5.png" style="width: auto !important; height: auto !important; float: right;"></div>
</div>
<div style="clear: both;">&nbsp;</div>
<p>The “Tests” tab shows the information about:</p>
<p>Finally, in the “Movement” tab shows the position of the body.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="iphone_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/iphone_6.png" style="width: auto !important; height: auto !important;"></div>
<div class="notas_fondo" style="margin-top: 20px;">
<p><span class="content" style="text-decoration: underline;">NOTE:</span>The measurement of glucose has not been implemented in this example because both processes use UART communication and can cause malfunction</p>
</div>
<p class="ancla">Example</p>
<p><strong>Arduino</strong></p>
<p>The Arduino code used in this program is presented next:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)."  
 *
 *  Explanation: This example shows the way to communicate with  
 *  the Arduino Wifi Demo iPhone app. 
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad 
 */
 

#include &lt; PinChangeInt.h &gt;
#include &lt; eHealth.h &gt;

char recv[256];
float parameter = 0.098;
uint8_t cont = 0;


void setup(){ 

  //eHealth.readGlucometer();
  Serial.begin(9600);
  eHealth.initPulsioximeter();
  eHealth.initPositionSensor(); 
} 

void loop(){ 

  Serial.print("$$$"); 
  check();  

  // 1. Configure the transport protocol (UDP, TCP, FTP, HTTP...)  
  Serial.print("set i p 3\r");  check();   
  // 2. Configure the way the modules will resolve the IP address. 
  Serial.print("set i d 2\r");  check();   
  // 3. Configure how to connect the AP. 
  Serial.print("set w a 6\r");  check();   
  // 3.1 Sets the name of the ADhoc network.  
  Serial.print("set w s iPHONE_ADHOC\r");  check();   
  // 3.2 Sets the channel of the ADhoc network     
  Serial.print("set w c 6\r");  check();

  Serial.print("set w j 4\r");  check();
  Serial.print("save\r");  check();
  Serial.print("exit\r");  check();
  Serial.print("$$$");  check();
  // Configures UDP host and ports.
  Serial.print("set i h 255.255.255.255\r");  check();
  Serial.print("set i r 12345\r");  check();
  Serial.print("set i l 2000\r");  check();
  // Checks if everything is Ok, even if It's correctly connected.

  // Exits from command mode, and then the UDP messages 
  // can be sent and received.
  Serial.print("exit\r");
  check();

  //Attach the inttruptions for using the pulsioximeter.     
  PCintPort::attachInterrupt(6, readPulsioximeter, RISING);
  delay(1000);  


  while(1){     

    eHealth.initBloodPressureSensor(0.1);

    //1. Read from eHealth. 
    int airFlow = eHealth.getAirFlow();     
    float temperature = eHealth.getTemperature();     
    float conductance = eHealth.getSkinConductance();   
    float resistance = eHealth.getSkinResistance();
    float conductanceVol = eHealth.getSkinConductanceVoltage();
    int BPM = eHealth.getBPM();     
    int SPO2 = eHealth.getOxygenSaturation();     
    uint8_t pos = eHealth.getBodyPosition();      
    int syst = eHealth.getSystolicPressure();
    int diast = eHealth.getDiastolicPressure();     
    float ECG = eHealth.getECG();
    //uint8_t glucose = eHealth.glucoseDataVector[0].glucose;

    // 2. Send data to the Android smartphone    
    Serial.print(int(airFlow));         Serial.print("#");
    Serial.print(ECG);                  Serial.print("#");
    Serial.print(temperature);          Serial.print("#");
    Serial.print(int(BPM));             Serial.print("#");
    Serial.print(int(SPO2));            Serial.print("#");
    Serial.print(conductance);          Serial.print("#");
    Serial.print(int(resistance));      Serial.print("#");
    Serial.print(int(airFlow));         Serial.print("#");
    Serial.print(syst);                 Serial.print("#");
    Serial.print(diast);                Serial.print("#");
    Serial.print(int(0));               Serial.print("#");
    Serial.print(int(pos));             Serial.print("#");
    Serial.print("\n");    
    
    // Reduce this delay for more data rate
    delay(100);  
  }

}

//=========================================================================

void check(){
  cont=0; 
  delay(500);
  while (Serial.available()&gt;0)
  {
    recv[cont]=Serial.read(); 
    delay(10);
    cont++;
  }
  recv[cont]='\0';
  Serial.println(recv);
  Serial.flush(); 
  delay(100);
}

//Include always this code when using the pulsioximeter sensor
//=========================================================================
void readPulsioximeter(){  

  cont ++;

  if (cont == 50) { //Get only one 50 measures to reduce the latency
    eHealth.readPulsioximeter();  
    cont = 0;
  }
}



	</pre>
</div>
<p><strong><a name="step5_4_3" class="ancla">Connecting to an Android</a></strong></p>
<p><strong>Installation:</strong></p>
<p>a) Download the application from Android Market:</p>
<p>b) Download the application () from Libelium website: http://www.libelium.com/apps</p>
<p>Once installed, the app appears in your device screen.</p>
<p><strong><a name="step5_4_4" class="ancla">Android app tutorial</a></strong></p>
<p>The use of the app is very simple, first you have to create an AP from your Android device and then set Waspmote to connect to it.</p>
<p>To create the AP from the Android device:</p>
<p>Go to Settings-&gt;Tethering &amp; Portable Hotspot or Settings-&gt;Wifi-&gt; My Wifi Zone (depending of the version of mobile).</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="android_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/android_1.png" style="width: auto !important; height: auto !important;"></div>
Then configure the WLAN hotspot (name= ANDROID, Security= Open).
<div style="margin: auto; text-align: center;"><img border="0" alt="android_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/android_2.png" style="width: auto !important; height: auto !important;"></div>
<p>Finally, enable Portable WLAN hotspot (or My Wifi Zone), and Arduino will connect to the Android device. Once connected, you can launch the e-Health App.</p>
<div style="margin: auto; text-align: center;">
<div style="width: 550px; text-align: center; margin: auto;"><img border="0" alt="android_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/android_3.png" style="width: auto !important; height: auto !important; float: left;"> <img border="0" alt="android_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/android_4.png" style="width: auto !important; height: auto !important; float: right;"></div>
</div>
<div style="clear: both;">&nbsp;</div>
<p>The App shows the information the nodes are sending which contains  the sensor data gathered.</p>
<p>The first tab “Charts” shows:</p>
<p>The “Current data” tab, shows data that is in continuous change:</p>
<div style="margin: auto; text-align: center; overflow: hidden;">
<div style="width: 550px; text-align: center; margin: auto;"><img border="0" alt="android_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/android_5.png" style="width: auto !important; height: auto !important; float: left;"> <img border="0" alt="android_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/android_6.png" style="width: auto !important; height: auto !important; float: right;">
<div>&nbsp;</div>
</div>
<div>&nbsp;</div>
</div>
<div>&nbsp;</div>
<p>The “Tests” tab shows the information about:</p>
<p>Finally, in the “Movement” tab shows the position of the body.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="android_app" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/android_7.png" style="width: auto !important; height: auto !important;"></div>
<div class="notas_fondo" style="margin-top: 20px;">
<p><span class="content" style="text-decoration: underline;">NOTE:</span>The measurement of glucose has not been implemented in this example because both processes use UART communication and can cause malfunction</p>
</div>
<p class="ancla">Example</p>
<p><strong>Arduino</strong></p>
<p>The Arduino code used in this program is presented next:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)."  
 *
 *  Explanation: This example shows the way to communicate with  
 *  the Arduino Wifi Demo Android app. 
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad 
 */
 
 
#include &lt; PinChangeInt.h &gt;
#include &lt; eHealth.h &gt; 

char recv[128];
float parameter = 0.098;
uint8_t cont = 0;


void setup()
{ 
  Serial.begin(9600);
  
  eHealth.initPulsioximeter();
  eHealth.initPositionSensor(); 
  
  //Attach the inttruptions for using the pulsioximeter.   
  PCintPort::attachInterrupt(6, readPulsioximeter, RISING);
  delay(1000);
  
}

void loop()
{
  while (Serial.available()&gt;0) {}
  // Enters in command mode    
    Serial.print("$$$"); check();  
  // Sets DHCP and TCP protocol
    Serial.print("set ip dhcp 1\r"); check();
    Serial.print("set ip protocol 1\r"); check();
  // Configures the way to join the network AP
    Serial.print("set wlan join 0\r"); check();
    Serial.print("join ANDROID\r"); check();
  
    Serial.print("set i h 255.255.255.255\r"); delay(1000);
    
    Serial.print("set i r 12345\r"); check();
    Serial.print("set i l 2000\r"); check();
    Serial.print("exit\r"); check();

    while(1){     
    
      eHealth.initBloodPressureSensor(0.098);
      
      //1. Read from eHealth. 
       int airFlow = eHealth.getAirFlow();     
       float temperature = eHealth.getTemperature();     
       float conductance = eHealth.getSkinConductance();   
       float resistance = eHealth.getSkinResistance();
       float conductanceVol = eHealth.getSkinConductanceVoltage();
       int BPM = eHealth.getBPM();     
       int SPO2 = eHealth.getOxygenSaturation();     
       uint8_t pos = eHealth.getBodyPosition();      
       int syst = eHealth.getSystolicPressure();
       int diast = eHealth.getDiastolicPressure();     
       float ECG = eHealth.getECG();
       //uint8_t glucose = eHealth.glucoseDataVector[0].glucose;      

      //Data sensor must be sent in this order to mobile android application 
      Serial.print(int(airFlow));     Serial.print("#");
      Serial.print(ECG);              Serial.print("#");
      Serial.print(syst);             Serial.print("#");
      Serial.print(diast);            Serial.print("#");
      Serial.print(int(0));           Serial.print("#"); //Glucose is not implemented yet
      Serial.print(temperature);      Serial.print("#");
      Serial.print(int(BPM));         Serial.print("#");
      Serial.print(int(SPO2));        Serial.print("#");
      Serial.print(conductance);      Serial.print("#");
      Serial.print(int(resistance));  Serial.print("#");
      Serial.print(int(airFlow));     Serial.print("#");
      Serial.print(int(pos));         Serial.print("#");
      Serial.print("\n");    
    
      // Reduce this delay for more data rate
      delay(250);  
  }
}

void check(){
  cont=0; delay(500);
  while (Serial.available()&gt;0)
  {
     recv[cont]=Serial.read(); delay(10);
     cont++;
  }
  recv[cont]='\0';
  Serial.println(recv);
  Serial.flush(); delay(100);
}



//Include always this code when using the pulsioximeter sensor
//=========================================================================
void readPulsioximeter(){  
  
  cont ++;
 
  if (cont == 50) { //Get only one 50 measures to reduce the latency
    eHealth.readPulsioximeter();  
    cont = 0;
  }
}


	</pre>
</div>
<div style="float: right;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#index" class="top_link"><img border="0" alt="up" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arrow_up.png" style="width: auto !important; height: auto !important; border: none; vertical-align: text-bottom; margin: 0;"><span style="margin-left: 5px; color: #87888a;">Go to index</span></a></div>
<div style="clear: both;">&nbsp;</div>
<!-- STEP 6 -->
<h2><a name="step6" class="ancla">6. Sending the data to the Cloud.</a></h2>
<p>Telemedicine is the use of telecommunication and information technologies in order to provide clinical health care at a distance. It helps eliminate distance barriers and can improve access to medical services that would often not be consistently available in distant rural communities. It is also used to save lives in critical care and emergency situations.</p>
<p>Although there were distant precursors to telemedicine, it is essentially a product of 20th century telecommunication and information technologies. These technologies permit communications between patient and medical staff with both convenience and fidelity, as well as the transmission of medical, imaging and health informatics data from one site to another.</p>
<p><strong> eHealth Sensor platform allows to share medical data with the cloud, and perform real-time diagnosis. Thanks to many communications modules can send data over several transmission protocols</strong></p>
<h4><a name="step6_1" class="ancla">Wifi</a></h4>
<p>We will use the <a href="http://www.cooking-hacks.com/index.php/wifi-module-for-arduino-roving-rn-xvee-xbee-compatible.html">wifi module</a> Roving RN-171. This module fits in the XBee socket of our Communication Shield and allows to connect your Arduino/RasberryPi shield to a WiFi network.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="e_health+placa" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e_health+placa.png" style="width: auto !important; height: auto !important;"></div>
<p><strong>Example code</strong></p>
<p>Wifi examples shows the way to communicate with the Arduino Wifi Demo <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#step5_5">Android and iPhone app.</a></p>
<p>Refer to Wifi tutorials <a href="http://www.cooking-hacks.com/index.php/blog/tutorial-wifi-module-for-arduino-roving-rn-xvee">(Arduino)</a> <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/wifi-module-for-raspberry-pi-roving-rn-xvee">(Raspberry)</a> for more information.</p>
<h4><a name="step6_2" class="ancla">Bluetooth</a></h4>
<p><a href="http://www.cooking-hacks.com/index.php/bluetooth-module-pro-for-arduino.html">Bluetooth Modules</a> for Arduino/Raspberry are able to be plugged into the XBee Shield and get a serial communication between the computer and an Arduino/RasberryPi board through Bluetooth protocol.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="xbee2" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/xbee2.png" style="width: auto !important; height: auto !important;"></div>
<p>Bluetooth module PRO for Arduino supports Serial Port Profile (SPP) to exchange data with other devices.  This profile allows to create connections to another device using the same profile (p2p connection). It sends data to the specified device. This device is the one which the connection has been created to.</p>
<p>Refer to Bluetooth tutorials <a href="http://www.cooking-hacks.com/index.php/blog/tutorial-bluetooth-module-pro-for-arduino">(Arduino)</a> <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/bluetooth-module-pro-for-raspberry-pi">(Raspberry)</a> for more information.</p>
<h4><a name="step6_3" class="ancla">Zigbee / 802.15.4</a></h4>
<p>The <a href="http://www.cooking-hacks.com/index.php/shop/arduino/arduino-xbee-802-15-4.html">Arduino Xbee shield</a> allows your Arduino/RasberryPi board to communicate wirelessly using Zigbee.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="xbee" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/xbee.png" style="width: auto !important; height: auto !important;"></div>
<p><strong>Example code</strong></p>
<p>This example shows the way to communicate with the Arduino using Zigbee protocol. Upload the next code:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)."  
 *
 *  Explanation: This example shows the way to communicate with  
 *  the Arduino using ZigBee protocol. 
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad 
 */
 
 
#include &lt; PinChangeInt.h &gt;
#include &lt; eHealth.h &gt;

char recv[128];
uint8_t cont = 0;

//  Note :  The Xbee modules must be configured previously. 
//  See the next link http://www.cooking-hacks.com/index.php/documentation/tutorials/arduino-xbee-shield 

void setup()
{ 
  Serial.begin(9600);
  
  eHealth.initPulsioximeter();
  eHealth.initPositionSensor(); 
  
  //Attach the inttruptions for using the pulsioximeter.   
  PCintPort::attachInterrupt(6, readPulsioximeter, RISING);
  delay(1000);
  
}

void loop()
{    
      
      //1. Read from eHealth. 
       int airFlow = eHealth.getAirFlow();     
       float temperature = eHealth.getTemperature();     
       float conductance = eHealth.getSkinConductance();   
       float resistance = eHealth.getSkinResistance();
       int BPM = eHealth.getBPM();     
       int SPO2 = eHealth.getOxygenSaturation();     
       uint8_t pos = eHealth.getBodyPosition();      
    

      Serial.print(int(airFlow));     Serial.print("#");
      Serial.print(temperature);      Serial.print("#");
      Serial.print(int(BPM));         Serial.print("#");
      Serial.print(int(SPO2));        Serial.print("#");
      Serial.print(conductance);      Serial.print("#");
      Serial.print(int(resistance));  Serial.print("#");
      Serial.print(int(pos));         Serial.print("#");
      Serial.print("\n");    
    
      // Reduce this delay for more data rate
      delay(250);   
}

void check(){
  cont=0; delay(500);
  while (Serial.available()&gt;0)
  {
     recv[cont]=Serial.read(); delay(10);
     cont++;
  }
  recv[cont]='\0';
  Serial.println(recv);
  Serial.flush(); delay(100);
}



//Include always this code when using the pulsioximeter sensor
//=========================================================================
void readPulsioximeter(){  
  
  cont ++;
 
  if (cont == 50) { //Get only one 50 measures to reduce the latency
    eHealth.readPulsioximeter();  
    cont = 0;
  }
}


		</pre>
</div>
<div class="notas_fondo" style="margin-top: 20px;">
<p><span class="content" style="text-decoration: underline;">NOTE:</span> The Xbee modules must be configured previously.  See the next link <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/arduino-xbee-shield">http://www.cooking-hacks.com/index.php/documentation/tutorials/arduino-xbee-shield</a></p>
</div>
<p>Refer to XBee tutorials <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/arduino-xbee-shield">(Arduino)</a> <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/raspberry-pi-xbee">(Raspberry)</a> for more information.</p>
<h4><a name="step6_4" class="ancla">GPRS</a></h4>
<p><a href="http://www.cooking-hacks.com/index.php/gprs-quadband-module-sim900-for-arduino.html">GPRS Quadband Module for Arduino/Raspberry (SIM900)</a> offers GPRS connection to your Arduino/RasberryPi board. You can send your data by SMS or do missed calls from your Arduino to mobile devices... or to another Arduino/RasberryPi connected to this module.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="e_health+placa_Verde" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e_health+placa_Verde.png" style="width: auto !important; height: auto !important;"></div>
<p><strong>Example code</strong></p>
<p>This example shows the way to send a text message with the corporal temperature using the GPRS module. Upload the next code:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)."  
 *
 *  Explanation: This example shows the way to send a text message with 
 *  the corporal temperature using the GPRS module. 
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad 
 */
 
// For more information about the GPRS shield please see our tutorial
// in cooking-hacks web site. http://www.cooking-hacks.com


#include &lt; eHealth.h &gt;

// the pin to switch on the module (without press on button) 
int pinModuleOn = 2;      

// ********* is the number to call
char phoneNumber[]="**********";    


void switchModule(){       
  digitalWrite(pinModuleOn,HIGH);
  delay(2000);
  digitalWrite(pinModuleOn,LOW);
}

void setup() {

  // UART baud rate
  Serial.begin(115200);               
  delay(2000);

  // Sitches the module ON
  // switchModulo();    

  for (int i=0;i &lt; 5;i++){
    Serial.println("Push the button");
    delay(5000);
  }
  // Sets the SMS mode to text
  Serial.println("AT+CMGF=1");         
  delay(100);
}

void loop(){

  delay(100);
  float temperature = eHealth.getTemperature();     

  delay(1500);
  // send the SMS number 
  Serial.print("AT+CMGS=\"");     
  Serial.print(phoneNumber);
  Serial.println("\"");
  // the SMS body 
  while(Serial.read()!='&gt;');      
  Serial.print(temperature);

  delay(1000);
  //sends ++
  Serial.write(0x1A);       
  Serial.write(0x0D);
  Serial.write(0x0A);
  delay(5000);

}

		</pre>
</div>
<p>Refer to GPRS tutorials <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/arduino-gprs-gsm-quadband-sim900">(Arduino)</a> <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/raspberry-pi-gprs-gsm-quadband-sim900">(Raspberry)</a> for more information.</p>
<h4><a name="step6_5" class="ancla">3G</a></h4>
<!-- Falta subsecci&oacute;n -->
<p>The new <a href="http://www.cooking-hacks.com/index.php/3g-gprs-shield-for-arduino-3g-gps.html">3G shield for Arduino/Raspberry</a> enables the connectivity to high speed WCDMA and HSPA cellular networks in order to make possible the creation of the next level of worldwide interactivity projects inside the new "Internet of Things" era.</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="gps_e_health" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/gps_e_health.png" style="width: auto !important; height: auto !important;"></div>
<div style="margin: auto; text-align: center;"><img border="0" alt="e_health_con_conectores" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/e_health_con_conectores.png" style="width: auto !important; height: auto !important;"></div>
<p><strong>Example code</strong></p>
<p>This example how to send data using 3G shield and making a connection to a server.   Upload the next code:</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
 *  eHealth sensor platform for Arduino and Raspberry from Cooking-hacks.
 *
 *  Description: "The e-Health Sensor Shield allows Arduino and Raspberry Pi 
 *  users to perform biometric and medical applications by using 9 different 
 *  sensors: Pulse and Oxygen in Blood Sensor (SPO2), Airflow Sensor (Breathing),
 *  Body Temperature, Electrocardiogram Sensor (ECG), Glucometer, Galvanic Skin
 *  Response Sensor (GSR - Sweating), Blood Pressure (Sphygmomanometer) and 
 *  Patient Position (Accelerometer)."  
 *
 *  Explanation: This example how to send data using 3G shield and 
 *  making a connection to a server. 
 *
 *  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
 *  http://www.libelium.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see .
 *
 *  Version 0.1
 *  Author: Luis Martin &amp; Ahmad Saad 
 */

// For more information about the 3G shield please see our tutorial
// in cooking-hacks web site. http://www.cooking-hacks.com

#include &lt; eHealth.h &gt;


char data[512];
char tosend[128];
int led = 13;
int onModulePin = 2;        // the pin to switch on the module (without press on button) 

int x = 0;

char name[20];

char server[ ]="192.198.1.1"; //Your server IP address
char port[ ]="5555"; // Your port. 

void switchModule(){
  digitalWrite(onModulePin,HIGH);
  delay(2000);
  digitalWrite(onModulePin,LOW);
}

void setup(){

  Serial.begin(115200);         // UART baud rate
  delay(2000);
  pinMode(led, OUTPUT);
  pinMode(onModulePin, OUTPUT);
  switchModule();              // switches the module ON

  for (int i=0;i&lt; 5;i++){
    delay(5000);
  } 

  Serial.println("AT+CGSOCKCONT=1,\"IP\",\"internetmas\"");
  Serial.flush();
  x=0;
  do
  {
    while(Serial.available()==0);
    data[x]=Serial.read();  
    x++;  
  } while(!(data[x-1]=='K'&amp;&amp;data[x-2]=='O')); //waits for response "Network opened"


}

void loop()
{
  float temperature = eHealth.getTemperature();    
  int longitud = sprintf(tosend,"%d", temperature); 

  Serial.print("AT+NETOPEN=\"TCP\",");
  //Opens the socket with the type of protocol and the port 
  Serial.println(port);        
  Serial.flush();
  x=0;
  
  do
  {
    while(Serial.available()==0);
    data[x]=Serial.read();  
    x++;  
  }
  while(!(data[x-1]=='K'&amp;&amp;data[x-2]=='O'));        //waits for response "Network opened"

  Serial.print("AT+TCPCONNECT=\""); //Connects with the server
  Serial.print(server);
  Serial.print("\",");    
  Serial.println(port);

  Serial.flush();
  while(Serial.read()!='K');  

  Serial.print("AT+TCPWRITE=");
  Serial.println(longitud, DEC);    //Sends TCP data
  Serial.flush();



  do 
  { 
    while (Serial.available() == 0) {};      
    //Serial.println(char(Serial.read()));      
  } while(Serial.read()!='&gt;');  

  Serial.println(tosend); 

  x=0;

  do
  {
    while(Serial.available()==0);
    data[x]=Serial.read();  
    x++;                        
  }
  while(!(data[x-1]=='K'&amp;&amp;data[x-2]=='O'));

  Serial.println("AT+NETCLOSE"); //Opens the socket with the type of protocol and the port 
  Serial.flush();
  while(Serial.read()!='K'); 

  while(1);

}


		</pre>
</div>
<h4><a name="step6_6" class="ancla">Camera for Photo Diagnosis</a></h4>
<p>This module allows to connect a camera for video recording and taking photos. Once saved the video or image file can be sent to an FTP or FTPS as you'll see later. <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/arduino-3g-gprs-gsm-gps#step8">Images with 3G Module tutorial</a>.</p>
<p>Camera for the 3G shield</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="3G camera" data-src="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/tutorial_new_3g_arduino/foto19.jpg" style="width: auto !important; height: auto !important;"></div>
<p>Insert the camera with metallic contacts facing up</p>
<div style="margin: auto; text-align: center;"><img border="0" alt="3G camera" data-src="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/tutorial_new_3g_arduino/foto24.jpg" style="width: auto !important; height: auto !important;"></div>
<p><strong>Example Code</strong></p>
<p>Take photos is very easy. Upload the next code.</p>
<div class="codigo"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#">Show Code</a>
<pre class="codigo_plegado">/*
*  Copyright (C) 2012 Libelium Comunicaciones Distribuidas S.L.
*  http://www.libelium.com
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with this program.  If not, see .
*
*  Version 0.1
*  Author: Alejandro Gállego
*/


int led = 13;
int onModulePin = 2;        // the pin to switch on the module (without press on button) 

int x = 0;

char name[20];

void switchModule(){
    digitalWrite(onModulePin,HIGH);
    delay(2000);
    digitalWrite(onModulePin,LOW);
}

void setup(){

    Serial.begin(115200);                // UART baud rate
    delay(2000);
    pinMode(led, OUTPUT);
    pinMode(onModulePin, OUTPUT);
    switchModule();                    // switches the module ON

    for (int i=0;i &lt; 5;i++){
        delay(5000);
    }   

    Serial.println("AT+CCAMS");     //starts the camera
    while(Serial.read()!='K');

    Serial.println("AT+CCAMSETD=640,480");     //sets VGA (640*480) resolution
    while(Serial.read()!='K');
    
    Serial.println("AT+FSLOCA=0");     //stores the image file in the 3G module
    while(Serial.read()!='K');
    

}

void loop(){

    delay(1500);
    while(Serial.available()!=0){
        Serial.read();
    }
    Serial.println("AT+CCAMTP");     //takes a picture, but not saved it
    while(Serial.read()!='K');  

    Serial.println("AT+CCAMEP");     // saves the picture into C:/Picture    
    Serial.flush();     
    while(Serial.read()!='/');
    while(Serial.read()!='/');

    x=0;
    do{
        while(Serial.available()==0);
        name[x]=Serial.read();
        x++;
    }while(x &lt; 19);

    while(Serial.read()!='K');  
    Serial.println(name); 

    Serial.println("AT+CCAME");     // stops the camera
    while(Serial.read()!='K');  

    while(1);
    
}

	</pre>
</div>
<p>Example picture 1: (<a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/e_health/snake_bite.jpg" target="_blank">Snake bite telemedicine simulation</a>)</p>
<p>Example picture 2: (<a href="http://www.cooking-hacks.com/skin/frontend/default/cooking/images/catalog/documentation/tutorial_new_3g_arduino/foto25.jpg" target="_blank">Patient photo</a>)</p>
<p>Snake bites occur when a snake bites the skin. They are medical emergencies if the snake is poisonous.</p>
<p><strong>Sending images via 3g is a simple and rapid method for medical consultation</strong></p>
<p>Refer to 3G tutorials <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/arduino-3g-gprs-gsm-gps">(Arduino)</a> <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/raspberry-pi-3g-gprs-gsm-gps">(Raspberry)</a> for more information.</p>
<div style="float: right;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#index" class="top_link"><img border="0" alt="up" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arrow_up.png" style="width: auto !important; height: auto !important; border: none; vertical-align: text-bottom; margin: 0;"><span style="margin-left: 5px; color: #87888a;">Go to index</span></a></div>
<div style="clear: both;">&nbsp;</div>
<!-- STEP 7 -->
<h2><a name="step7" class="ancla">7. Forum.</a></h2>
<p>There is a <a href="http://www.cooking-hacks.com/forum/viewforum.php?f=39">forum</a> available in which you can get support for e-Health platform.</p>
<!-- STEP 8 -->
<h2><a name="step8" class="ancla">8. Get the shields and sensors.</a></h2>
<h4><a name="step8_1" class="ancla">Kit</a></h4>
<h4><a name="step8_2" class="ancla">Sensors</a></h4>
<div style="float: right;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical#index" class="top_link"><img border="0" alt="up" data-src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/catalog/documentation/e_health/arrow_up.png" style="width: auto !important; height: auto !important; border: none; vertical-align: text-bottom; margin: 0;"><span style="margin-left: 5px; color: #87888a;">Go to index</span></a></div>
<div style="clear: both;">&nbsp;</div>
<p>&nbsp;</p>
</div>
<div class="fin_texto_cms">&nbsp;</div>
<div class="back"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials">&lt;&lt; Back to "Documentation Index"</a></div>
</div>
</div></div>                </div>
                <div class="col-right sidebar"><script type="text/javascript">// <![CDATA[
$j(document).ready(function(){
mdmr1=Math.floor(Math.random()*2);
mdmr2=Math.floor(Math.random()*3);
mdmr3=Math.floor(Math.random()*2);
/*mdmr4 y mdmr5 son mientras tengamos rotando el banner de raspberry pi con el de waspmote starter kit y el waspmote tutorial*/ 
mdmr4=Math.floor(Math.random()*2);
mdmr5=Math.floor(Math.random()*2);

/*cyberweekend */
mdmr6=Math.floor(Math.random()*2);


$j('#c2').cycle({
    fx:     'fade',
    startingSlide: mdmr2,
speed:  1000,
timeout:  8000,
pause: 1
    });
    
    
$j('#c3').cycle({
    fx:     'fade',
    startingSlide: mdmr3,
speed:  1000,
timeout:  3000,
pause: 1
    }); 
/*c4 y c5 son mientras tengamos rotando el banner de raspberry pi con el de waspmote starter kit y el waspmote tutorial*/       
$j('#c4').cycle({
    fx:     'fade',
    startingSlide: mdmr4,
delay:  1500,
speed:  1000,
timeout:  3000,
pause: 1
    }); 
    
$j('#c5').cycle({
    fx:     'fade',
    startingSlide: mdmr5,
delay:  1500,
speed:  1000,
timeout:  3000,
pause: 1
    }); 

    
/*cyberweekend*/    
/*
$j('#c6').cycle({
    fx:     'fade',
    startingSlide: mdmr6,
delay:  750,
speed:  1000,
timeout:  3000,
pause: 1
    }); 
*/  
    
    
/*Funcion Oscar discriminar banners al añadir c4 y c5 para el banner de raspberry pi*/

var titulo_pag=$j(this).attr('title');

if((titulo_pag=="Cooking Hacks - Tasty Electronics for the Arduino and Raspberry Pi Community")||(titulo_pag=="Cooking Hacks - Documentation - Waspmote - Wireless Sensor Networks Open Source Platform"))
{   
$j("#c4").css("display","none");
$j("#ondemand").css("display","none");
}   
    
else
{   
$j("#c5").css("display","none");    
$j('#c1').cycle({
    fx:     'fade',
    startingSlide: mdmr1,
 speed:  1000,
timeout:  3000,
pause: 1
    });
}


/*Funcion original Oscar discriminar banners */
/*
var titulo_pag=$j(this).attr('title');

if((titulo_pag=="Cooking Hacks - Tasty Electronics for the Arduino Community")||(titulo_pag=="Cooking Hacks - Documentation - Waspmote - Wireless Sensor Networks Open Source Platform"))
{   
$j("#waspmote_wsn_banner").css("display","none");
}   
    
else
{   
$j("#waspmote_starter_kit_banner").css("display","none");   
}
*/
    
});
// ]]></script>
<div class="banner_sales"><a href="http://www.cooking-hacks.com/index.php/shop/sales.html?utm_source=banner_sales&utm_medium=banner"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_sales_eng.png" border="0" alt="banner_sales_eng.png"> </a></div>
<div class="banner_new"><a href="http://www.cooking-hacks.com/index.php/shop/new-products.html?utm_source=banner_newproducts&utm_medium=banner"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_new_eng.png" border="0" alt="banner_new_eng.png"></a></div>
<div class="banner_top"><a href="http://www.cooking-hacks.com/index.php/shop/top-sellers.html?utm_source=banner_topproducts&utm_medium=banner"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_top_rev_eng.png" border="0" alt="banner_exclusive_esp"></a></div>
<div id="c1" class="pics banner" style="position: relative; margin-left: 0px !important; margin-bottom: 5px !important;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/ehealth-biometric-sensor-platform-arduino-raspberry-pi-medical?utm_source=banner_ehealth&utm_medium=banner" style="position: absolute; top: 0px; left: 0px; display: none; z-index: 2; opacity: 0; width: 195px; height: 184px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_e-health_sensor_platform_eng.png" border="0" alt="banner_e-health_sensor_platform_eng" width="195px" height="184px"> </a><a href="http://www.cooking-hacks.com/index.php/shop/on-demand-products.html?utm_source=banner_ondemand&utm_medium=banner" id="ondemand" style="position: absolute; top: 0px; left: 0px; display: block; z-index: 3; opacity: 1; width: 195px; height: 200px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_ondemand_sidebar_eng.png" border="0" alt="banner_ondemand_sidebar_eng" width="195px" height="200px"> </a></div>
<!-- cyberweekend
<div id="c6" class="pics banner" style="position: relative; margin-left: 0px !important; margin-bottom: 5px !important;" _mce_style="position: relative; margin-left: 0px !important; margin-bottom: 5px !important;"><a href="http://www.cooking-hacks.com/index.php/cyberweekend-2012?utm_source=banner_cybermonday_2012&amp;utm_medium=banner" _mce_href="http://www.cooking-hacks.com/index.php/cyberweekend-2012?utm_source=banner_cybermonday_2012&amp;utm_medium=banner"><img style="width: 195px !important; height: 184px !important;" _mce_style="width: 195px !important; height: 184px !important;" src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/banner_cybermonday.png" _mce_src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/banner_cybermonday.png" alt="banner_cybermonday" /></a></div>
--> <!-- C&oacute;digo nuevo al a&ntilde;adir el banner de raspberry pi que rota con los banners de waspmote starter kit con el de waspmote tutorial -->
<div id="c4" class="pics banner" style="position: relative; margin-left: 0px !important; margin-bottom: 5px !important;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge?utm_source=banner_raspberry&utm_medium=banner" style="position: absolute; top: 0px; left: 0px; display: block; z-index: 3; opacity: 1; width: 207px; height: 195px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_raspberry_pi_arduino_eng.png" border="0" alt="banner_raspberry_pi_arduino_eng" style="width: 207px !important; height: 195px !important;"> </a> <a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/waspmote?utm_source=banner_waspmote_sidebar&utm_medium=banner" style="position: absolute; top: 0px; left: 0px; display: none; z-index: 2; opacity: 0; width: 207px; height: 195px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_waspmote_eng.png" border="0" alt="banner_waspmote_eng" style="width: 207px !important; height: 195px !important;"> </a></div>
<div id="c5" class="pics banner" style="position: relative; margin-left: 0px !important; margin-bottom: 5px !important; display: none;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge?utm_source=banner_raspberry&utm_medium=banner" style="position: absolute; top: 0px; left: 0px; display: none; z-index: 2; opacity: 0; width: 207px; height: 195px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_raspberry_pi_arduino_eng.png" border="0" alt="banner_raspberry_pi_arduino_eng" style="width: 207px !important; height: 195px !important;"> </a> <a href="http://www.cooking-hacks.com/index.php/waspmote-starter-kit.html?utm_source=banner_waspmote_starter_kit&utm_medium=banner" style="position: absolute; top: 0px; left: 0px; display: block; z-index: 3; opacity: 1; width: 207px; height: 195px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_waspmote_starter_kit_eng.png" border="0" alt="banner_waspmote_starter_kit_eng" style="width: 207px !important; height: 195px !important;"> </a></div>
<!-- C&oacute;digo original antes de a&ntilde;adir el banner de raspberry pi que rota con los banners de waspmote starter kit con el de waspmote tutorial --> <!--
<div id="waspmote_wsn_banner" class="banner" style="margin-left: -19px !important; margin-bottom: 5px !important;" _mce_style="margin-left: -19px !important; margin-bottom: 5px !important;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/waspmote?utm_source=banner_waspmote_sidebar&amp;utm_medium=banner" _mce_href="http://www.cooking-hacks.com/index.php/documentation/tutorials/waspmote?utm_source=banner_waspmote_sidebar&amp;utm_medium=banner"><img src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/banner_waspmote_eng.png" _mce_src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/banner_waspmote_eng.png" alt="banner_waspmote_eng" /></a></div>
<div id="waspmote_starter_kit_banner" class="banner" style="margin-left: -20px !important; margin-bottom: 5px !important;" _mce_style="margin-left: -20px !important; margin-bottom: 5px !important;"><a href="http://www.cooking-hacks.com/index.php/waspmote-starter-kit.html?utm_source=banner_waspmote_starter_kit&amp;utm_medium=banner" _mce_href="http://www.cooking-hacks.com/index.php/waspmote-starter-kit.html?utm_source=banner_waspmote_starter_kit&amp;utm_medium=banner"><img src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/banner_waspmote_starter_kit_eng.png" _mce_src="http://www.cooking-hacks.com/index.php/../skin/frontend/default/cooking/images/banner_waspmote_starter_kit_eng.png" alt="banner_waspmote_starter_kit_eng" /></a></div>
-->
<div id="c3" class="pics banner" style="position: relative; margin-bottom: 5px;"><a href="http://www.cooking-hacks.com/index.php/documentation/tutorials/arduino-3g-gprs-gsm-gps?utm_source=banner_3g_shield&utm_medium=banner" style="position: absolute; top: 0px; left: 0px; display: block; z-index: 3; opacity: 1; width: 195px; height: 195px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_3g_shield_eng.png" border="0" alt="banner_3g_shield_eng" width="195px" height="195px"> </a> <a href="http://www.cooking-hacks.com/index.php/distributors?utm_source=banner_distributors&utm_medium=banner" style="position: absolute; top: 0px; left: 0px; display: none; z-index: 2; opacity: 0; width: 195px; height: 184px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_distributor_eng.png" border="0" alt="banner_distributor_eng" width="195px" height="184px"> </a></div>
<div id="c2" class="pics banner" style="position: relative; margin-bottom: 5px;"><a href="http://www.cooking-hacks.com/index.php/save-now-discount?utm_source=banner_discount&utm_medium=banner" style="position: absolute; top: 0px; left: 0px; display: none; z-index: 3; opacity: 0; width: 195px; height: 184px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_discount_eng.png" border="0" alt="banner_discount_eng" width="195px" height="184px"> </a> <a href="http://www.cooking-hacks.com/index.php/shop/arduino/starter-kits.html?utm_source=banner_kits&utm_medium=banner" style="position: absolute; top: 0px; left: 0px; display: block; z-index: 4; opacity: 1; width: 195px; height: 184px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banners_kits_eng.png" border="0" alt="banners_kits_eng" width="195px" height="184px"> </a> <a href="http://www.cooking-hacks.com/index.php/shop/arduino/packs.html?utm_source=banner_packs&utm_medium=banner" style="position: absolute; top: 0px; left: 0px; display: none; z-index: 3; opacity: 0; width: 195px; height: 184px;"> <img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_arduino_saving_eng.png" border="0" alt="banner_arduino_saving_eng" width="195px" height="184px"> </a></div><div class="block block-list block-viewed">
    <div class="block-title">
        <strong><span>Recently Viewed Products</span></strong>
    </div>
    <div class="block-content">
        <ol id="recently-viewed-items">
                    <li class="item odd">
                <p class="product-name"><a href="http://www.cooking-hacks.com/index.php/electrocardiogram-sensor-ecg-ehealth-medical.html">Electrocardiogram Sensor (ECG) for e-Health Platform [Biometric / Medical Applications]</a></p>
            </li>
                    <li class="item even">
                <p class="product-name"><a href="http://www.cooking-hacks.com/index.php/patient-position-sensor-accelerometer-ehealth-medical.html">Patient Position Sensor (Accelerometer) for e-Health Platform [Biometric / Medical Applications]</a></p>
            </li>
                    <li class="item odd">
                <p class="product-name"><a href="http://www.cooking-hacks.com/index.php/ehealth-sensor-shield-biometric-medical-arduino-raspberry-pi.html">e-Health Sensor Shield for Arduino and Raspberry Pi [Biometric / Medical Applications]</a></p>
            </li>
                    <li class="item last even">
                <p class="product-name"><a href="http://www.cooking-hacks.com/index.php/ehealth-sensors-complete-kit-biometric-medical-arduino-raspberry-pi.html">e-Health Sensor Platform Complete Kit for Arduino and Raspberry Pi [Biometric / Medical Applications] </a></p>
            </li>
                </ol>
        <script type="text/javascript">decorateList('recently-viewed-items');</script>
    </div>
</div>
<div class="block block-list block-compare">
    <div class="block-title">
        <strong><span>Compare Products                    </span></strong>
    </div>
    <div class="block-content">
            <p class="empty">You have no items to compare.</p>
        </div>
</div>
<div class="block block-cart">
        <div class="block-title">
        <strong><span>Cart</span></strong>
    </div>
    <div class="block-content">
            <div class="summary">
                            <p class="amount">There are <a href="http://www.cooking-hacks.com/index.php/checkout/cart/">2 items</a> in your cart.</p>
                        <p class="subtotal">
                                    <span class="label">Cart Subtotal:</span> <span class="price">€110.00</span>                                                </p>
        </div>
            <div class="actions">
                <button type="button" title="Checkout" class="button" onclick="setLocation(&#39;http://www.cooking-hacks.com/index.php/checkout/onepage/&#39;)"><span><span>Checkout</span></span></button>
    </div>
                    <p class="block-subtitle">Recently added item(s)</p>
        <ol id="cart-sidebar" class="mini-products-list">
                    <li class="item odd">
            <a href="http://www.cooking-hacks.com/index.php/electrocardiogram-sensor-ecg-ehealth-medical.html" title="Electrocardiogram Sensor (ECG) for e-Health Platform [Biometric / Medical Applications]" class="product-image"><img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/parches_presentacion(1).png" width="50" height="50" alt="Electrocardiogram Sensor (ECG) for e-Health Platform [Biometric / Medical Applications]"></a>
        <div class="product-details">
        <a href="http://www.cooking-hacks.com/index.php/checkout/cart/delete/id/150517/uenc/aHR0cDovL3d3dy5jb29raW5nLWhhY2tzLmNvbS9pbmRleC5waHAvZG9jdW1lbnRhdGlvbi90dXRvcmlhbHMvZWhlYWx0aC1iaW9tZXRyaWMtc2Vuc29yLXBsYXRmb3JtLWFyZHVpbm8tcmFzcGJlcnJ5LXBpLW1lZGljYWw,/" title="Remove This Item" onclick="return confirm(&#39;Are you sure you would like to remove this item from the shopping cart?&#39;);" class="btn-remove">Remove This Item</a>
                <a href="http://www.cooking-hacks.com/index.php/checkout/cart/configure/id/150517/" title="Edit item" class="btn-edit">Edit item</a>
                <p class="product-name"><a href="http://www.cooking-hacks.com/index.php/electrocardiogram-sensor-ecg-ehealth-medical.html">Electrocardiogram Sensor (ECG) for e-Health Platform [Biometric / Medical Applications]</a></p>
        <strong>1</strong> x

    
                                <span class="price">€35.00</span>                    


    
    
            </div>
</li>
                    <li class="item last even">
            <a href="http://www.cooking-hacks.com/index.php/ehealth-sensor-shield-biometric-medical-arduino-raspberry-pi.html" title="e-Health Sensor Shield for Arduino and Raspberry Pi [Biometric / Medical Applications]" class="product-image"><img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/ehealth3.png" width="50" height="50" alt="e-Health Sensor Shield for Arduino and Raspberry Pi [Biometric / Medical Applications]"></a>
        <div class="product-details">
        <a href="http://www.cooking-hacks.com/index.php/checkout/cart/delete/id/150513/uenc/aHR0cDovL3d3dy5jb29raW5nLWhhY2tzLmNvbS9pbmRleC5waHAvZG9jdW1lbnRhdGlvbi90dXRvcmlhbHMvZWhlYWx0aC1iaW9tZXRyaWMtc2Vuc29yLXBsYXRmb3JtLWFyZHVpbm8tcmFzcGJlcnJ5LXBpLW1lZGljYWw,/" title="Remove This Item" onclick="return confirm(&#39;Are you sure you would like to remove this item from the shopping cart?&#39;);" class="btn-remove">Remove This Item</a>
                <a href="http://www.cooking-hacks.com/index.php/checkout/cart/configure/id/150513/" title="Edit item" class="btn-edit">Edit item</a>
                <p class="product-name"><a href="http://www.cooking-hacks.com/index.php/ehealth-sensor-shield-biometric-medical-arduino-raspberry-pi.html">e-Health Sensor Shield for Arduino and Raspberry Pi [Biometric / Medical Applications]</a></p>
        <strong>1</strong> x

    
                                <span class="price">€75.00</span>                    


    
    
            </div>
</li>
                </ol>
        <script type="text/javascript">decorateList('cart-sidebar', 'none-recursive')</script>
        </div>
</div>
<div class="block block-subscribe">
    <div class="block-title">
        <strong><span>Newsletter</span></strong>
    </div>
    <form action="http://www.cooking-hacks.com/index.php/newsletter/subscriber/new/" method="post" id="newsletter-validate-detail">
        <div class="block-content">
        <div class="form-subscribe-header">Sign up for our newsletter</div>
            <label for="newsletter">Sign Up for Our Newsletter:</label>
            <div class="input-box">
               <input type="text" name="email" id="newsletter" title="Sign up for our newsletter" class="input-text required-entry validate-email">
            </div>
            <div class="actions">
                <button type="submit" title="Subscribe" class="button"><span><span>Subscribe</span></span></button>
            </div>
        </div>
    </form>
    <script type="text/javascript">
    //<![CDATA[
        var newsletterSubscriberFormDetail = new VarienForm('newsletter-validate-detail');
    //]]>
    </script>
</div>
<script type="text/javascript">
//<![CDATA[
    function validatePollAnswerIsSelected()
    {
        var options = $$('input.poll_vote');
        for( i in options ) {
            if( options[i].checked == true ) {
                return true;
            }
        }
        return false;
    }
//]]>
</script>
<div class="block block-poll">
    <div class="block-title">
        <strong><span>Community Poll</span></strong>
    </div>
    <form id="pollForm" action="http://www.cooking-hacks.com/index.php/poll/vote/add/poll_id/1/" method="post" onsubmit="return validatePollAnswerIsSelected();">
        <div class="block-content">
            <p class="block-subtitle">What is your favorite color</p>
                        <ul id="poll-answers">
                                <li class="odd">
                    <input type="radio" name="vote" class="radio poll_vote" id="vote_1" value="1">
                    <span class="label"><label for="vote_1">Green</label></span>
                </li>
                                <li class="even">
                    <input type="radio" name="vote" class="radio poll_vote" id="vote_2" value="2">
                    <span class="label"><label for="vote_2">Red</label></span>
                </li>
                                <li class="odd">
                    <input type="radio" name="vote" class="radio poll_vote" id="vote_3" value="3">
                    <span class="label"><label for="vote_3">Black</label></span>
                </li>
                                <li class="last even">
                    <input type="radio" name="vote" class="radio poll_vote" id="vote_4" value="4">
                    <span class="label"><label for="vote_4">Magenta</label></span>
                </li>
                            </ul>
            <script type="text/javascript">decorateList('poll-answers');</script>
                        <div class="actions">
                <button type="submit" title="Vote" class="button"><span><span>Vote</span></span></button>
            </div>
        </div>
    </form>
</div>
<div class="banner"><img src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banners_info_pagos.png" alt="info_pagos"></div>
<div class="banner" style="margin-left:22px !important;"><a href="http://summit.oshwa.org/sponsor/" target="_blank"><img title="”Digi_supporter”" src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/banner_digi_supporter.png" alt="digi_supporter.png"></a></div></div>
            </div>
        </div>
        <div class="footer-container">
    <div class="footer">
        <ul>
<li><a href="http://www.cooking-hacks.com/index.php/about-magento-demo-store">About Us</a></li>
<li class="last"><a href="http://www.cooking-hacks.com/index.php/customer-service">Customer Service</a></li>
</ul><ul class="links">
                        <li class="first"><a href="http://www.cooking-hacks.com/index.php/catalog/seo_sitemap/category/" title="Site Map">Site Map</a></li>
                                <li><a href="http://www.cooking-hacks.com/index.php/catalogsearch/term/popular/" title="Search Terms">Search Terms</a></li>
                                <li><a href="http://www.cooking-hacks.com/index.php/catalogsearch/advanced/" title="Advanced Search">Advanced Search</a></li>
                                <li><a href="http://www.cooking-hacks.com/index.php/sales/guest/form/" title="Orders and Returns">Orders and Returns</a></li>
                                <li class=" last"><a href="http://www.cooking-hacks.com/index.php/contacts/" title="Contact Us">Contact Us</a></li>
            </ul>
        <p class="bugs">Help Us to Keep Magento Healthy - <a href="http://www.magentocommerce.com/bug-tracking" onclick="this.target=&#39;_blank&#39;"><strong>Report All Bugs</strong></a> (ver. 1.6.2.0)</p>
        <address>© Libelium Comunicaciones Distribuidas S.L. | <a href="http://www.libelium.com/legal">Terms of use</a><br><br>Virtual store subsidized by the Department of Science, Technology and University of the Government of Aragon</address>
    </div>
</div>
            </div>
</div>
<!-- ClickTale Bottom part -->
<div id="ClickTaleDiv" style="display: none;"></div>
<script type="text/javascript">
if(document.location.protocol!='https:')
  document.write(unescape("%3Cscript%20src='http://s.clicktale.net/WRd.js'%20type='text/javascript'%3E%3C/script%3E"));
</script><script src="./e-Health Sensor Platform for Arduino and Raspberry Pi [Biometric   Medical Applications]_files/WRd.js" type="text/javascript"></script>
<script type="text/javascript">
if(typeof ClickTale=='function') ClickTale(12114,1,"www14");
</script>
<!-- ClickTale end of Bottom part -->

</body></html>